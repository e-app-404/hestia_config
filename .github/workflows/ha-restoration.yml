name: HA Restoration ‚Äî Deploy

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (true/false)'
        required: false
        default: 'false'

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout latest main (no detached HEAD; full history)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          clean: true

      - name: Set core env
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "BUNDLE_TGZ=home_assistant_complete_restoration_v2.6_PRODUCTION.tar.gz" >> $GITHUB_ENV
          echo "BUNDLE_DIR=restoration_bundle_v2.0" >> $GITHUB_ENV
          # local path on HA the script will read from:
          echo "HA_DST=/tmp/_backup_source/.storage" >> $GITHUB_ENV

      - name: Prepare bundle directory on HA
        run: |
          ssh hass "cd /tmp && rm -rf ${BUNDLE_DIR} ha_complete_restoration_v2.0"
          rsync -avz "${BUNDLE_TGZ}" hass:/tmp/
          ssh hass "cd /tmp && tar -xzf ${BUNDLE_TGZ} && mv ha_complete_restoration_v2.0 ${BUNDLE_DIR} && chmod +x ${BUNDLE_DIR}/*.sh"
          echo "‚úÖ Bundle extracted and prepared"

      - name: Stage backup source on HA
        run: |
          ssh hass "mkdir -p ${HA_DST}"
          rsync -avz --delete "/Users/evertappels/Projects/HomeAssistant/_backups/f050d566/homeassistant/data/.storage/" "hass:${HA_DST}/"
          echo "‚úÖ Backup source staged at ${HA_DST}"

      - name: Execute restoration
        run: |
          ssh hass "cd /tmp/${BUNDLE_DIR} && CI=true ./deploy_complete_restoration.sh --backup-source ${HA_DST} --skip-matter"

      - name: Post-run (always; troubleshooting)
        if: always()
        run: |
          echo "üìã Bundle directory contents:"
          ssh hass "ls -la /tmp/${BUNDLE_DIR}" || true
          echo "üîç Checking for v2.6 features in script:"
          ssh hass "grep -E 'SAFETY|CI.*true|SKIP_REGISTRY|WORKDIR.*tmp' /tmp/${BUNDLE_DIR}/deploy_complete_restoration.sh | head -10" || true
