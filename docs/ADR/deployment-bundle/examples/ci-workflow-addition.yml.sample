# GitHub Actions CI Workflow Addition - EXAMPLES ONLY
# This file contains multiple workflow examples and is NOT a valid standalone YAML file
# Copy and adapt sections as needed for your repository's CI integration

# Add these jobs to your existing .github/workflows/ files

# Option 1: Add to existing workflow
# Add these jobs to your current CI workflow YAML file

jobs:
  # ... your existing jobs ...
  
  validate-cross-repo-adrs:
    name: Validate Cross-Repository ADRs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate cross-repository links
        run: |
          if [ -f "ops/ADR/validate_cross_repo_links.sh" ]; then
            echo "üîó Validating cross-repository ADR links..."
            ./ops/ADR/validate_cross_repo_links.sh
          else
            echo "‚ÑπÔ∏è  Cross-repository validation script not found"
          fi
          
      - name: Check ADR alignment drift
        run: |
          if [ -f "ops/ADR/check_alignment_drift.sh" ]; then
            echo "üîç Checking for ADR alignment drift..."
            ./ops/ADR/check_alignment_drift.sh
          else
            echo "‚ÑπÔ∏è  Alignment drift check script not found"
          fi

# Option 2: Standalone workflow file
# Create .github/workflows/adr-validation.yml with this content:

name: ADR Validation

on:
  push:
    branches: [ main ]
    paths: 
      - 'docs/ADR/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/ADR/**'
  schedule:
    # Run weekly to check for drift
    - cron: '0 9 * * 1'  # Every Monday at 9 AM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  validate-adrs:
    name: Validate ADRs
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Validate ADR structure
        run: |
          echo "üìã Validating ADR structure and formatting..."
          # Add your ADR structure validation here
          # Example: check front-matter, required sections, etc.
          
      - name: Validate cross-repository links
        run: |
          if [ -f "ops/ADR/validate_cross_repo_links.sh" ]; then
            echo "üîó Validating cross-repository ADR links..."
            ./ops/ADR/validate_cross_repo_links.sh
          else
            echo "‚ÑπÔ∏è  Cross-repository validation not configured"
          fi
          
      - name: Check alignment drift
        run: |
          if [ -f "ops/ADR/check_alignment_drift.sh" ]; then
            echo "üîç Checking for ADR alignment drift..."
            ./ops/ADR/check_alignment_drift.sh
          else
            echo "‚ÑπÔ∏è  Alignment drift checking not configured"
          fi
          
      - name: Generate alignment report
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          echo "üìä Generating ADR alignment report..."
          if [ -f "docs/ADR/alignment-status.yaml" ]; then
            echo "Current alignment status:"
            cat "docs/ADR/alignment-status.yaml"
          fi
          
      - name: Comment on PR with validation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Create a comment with validation results
            let comment = '## üîç ADR Validation Results\n\n';
            comment += '‚úÖ Cross-repository link validation completed\n';
            comment += '‚úÖ ADR alignment drift check completed\n\n';
            comment += '_Automated validation by cross-repository ADR system_';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

# Option 3: Branch protection integration
# Add this to your repository settings or via GitHub API:

# Required status checks for branch protection:
# - "validate-cross-repo-adrs" (if using Option 1)
# - "validate-adrs" (if using Option 2)

# Example repository configuration (via GitHub CLI):
# gh api repos/:owner/:repo/branches/main/protection \
#   --method PUT \
#   --field required_status_checks='{"strict":true,"contexts":["validate-adrs"]}' \
#   --field enforce_admins=true \
#   --field required_pull_request_reviews='{"required_approving_review_count":1}' \
#   --field restrictions=null

# Option 4: Advanced configuration with caching
# For repositories with many cross-repository references:

jobs:
  validate-cross-repo-adrs-cached:
    name: Validate Cross-Repository ADRs (Cached)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Cache validation results
        uses: actions/cache@v3
        with:
          path: |
            .adr-validation-cache
          key: adr-validation-${{ hashFiles('docs/ADR/**/*.md') }}
          restore-keys: |
            adr-validation-
            
      - name: Install dependencies
        run: |
          # Install any tools needed for validation
          sudo apt-get update
          sudo apt-get install -y curl jq
          
      - name: Validate with caching
        run: |
          echo "üîó Running cached cross-repository validation..."
          ./ops/ADR/validate_cross_repo_links.sh --cache
          
      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: adr-validation-report
          path: |
            docs/ADR/alignment-status.yaml
            .adr-validation-cache/
          retention-days: 30