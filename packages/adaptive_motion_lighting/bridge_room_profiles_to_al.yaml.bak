# AML — Bridge consolidated vars → Adaptive Lighting switches & manual control.
# Triggers on any var.*_aml_config update or HA start; reads attributes from the
# triggered var to avoid duplicating room maps.

automation:
  - alias: AML Bridge — Room Config to Adaptive Lighting
    id: aml_bridge_room_config_to_al
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - var.bedroom_aml_config
          - var.desk_aml_config
          - var.ensuite_aml_config
          - var.kitchen_aml_config
          - var.hallway_downstairs_aml_config
          - var.hallway_upstairs_aml_config
          - var.ottoman_aml_config
          - var.wardrobe_aml_config
      - platform: homeassistant
        event: start
    variables:
      var_entity: >-
        {% if trigger is defined and trigger.entity_id %}
          {{ trigger.entity_id }}
        {% else %}
          var.bedroom_aml_config
        {% endif %}
      al_enabled: "{{ state_attr(var_entity, 'al_enabled') | default(false) }}"
      al_main:    "{{ state_attr(var_entity, 'al_main')    | default('') }}"
      al_sleep:   "{{ state_attr(var_entity, 'al_sleep')   | default('') }}"
      group:      "{{ state_attr(var_entity, 'group')      | default('') }}"
      until_ts:   "{{ state_attr(var_entity, 'manual_override_until') | default('') }}"
    action:
      - choose:
          - conditions: "{{ al_main != '' }}"
            sequence:
              - choose:
                  - conditions: "{{ al_enabled | bool }}"
                    sequence:
                      - service: switch.turn_on
                        target: { entity_id: "{{ al_main }}" }
                  - conditions: "{{ not (al_enabled | bool) }}"
                    sequence:
                      - service: switch.turn_off
                        target: { entity_id: "{{ al_main }}" }
      - choose:
          - conditions: "{{ al_sleep != '' }}"
            sequence:
              - choose:
                  - conditions: "{{ (state_attr(var_entity, 'sleep') | default(false)) | bool }}"
                    sequence:
                      - service: switch.turn_on
                        target: { entity_id: "{{ al_sleep }}" }
                  - conditions: "{{ not (state_attr(var_entity, 'sleep') | default(false)) | bool }}"
                    sequence:
                      - service: switch.turn_off
                        target: { entity_id: "{{ al_sleep }}" }
      - choose:
          - conditions: "{{ al_main != '' and group != '' }}"
            sequence:
              - choose:
                  - conditions: "{{ until_ts != '' and now() < as_datetime(until_ts) }}"
                    sequence:
                      - service: adaptive_lighting.set_manual_control
                        data:
                          entity_id: "{{ al_main }}"
                          lights: ["{{ group }}"]
                          manual_control: true
                  - conditions: "{{ until_ts == '' or now() >= as_datetime(until_ts) }}"
                    sequence:
                      - service: adaptive_lighting.set_manual_control
                        data:
                          entity_id: "{{ al_main }}"
                          lights: ["{{ group }}"]
                          manual_control: false
