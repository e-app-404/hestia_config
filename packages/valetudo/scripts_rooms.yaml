# Per-room orchestration: call blueprint, wait for states, write back to var.<room>.
# Guard against missing segment_id by checking the central variable first.

script:
  valetudo_clean_living_room:
    alias: "Clean: Living Room"
    mode: queued
    sequence:
      - variables:
          seg: "{{ state_attr('var.living_room','segment_id') }}"
      - if:
          - condition: template
            value_template: "{{ seg is number }}"
        then:
          - service: script.valetudo_clean_rooms
            data:
              segments: "Living Room"
              iterations: 1
              mode: vacuum
              custom_order: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: cleaning
            timeout: "00:01:00"
            continue_on_timeout: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: docked
            timeout: "02:00:00"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_mark_cleaned %}
                      {{ json_update_mark_cleaned('var.living_room') | from_json }}
              - conditions: []
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_needs_cleaning %}
                      {{ json_update_needs_cleaning('var.living_room', true) | from_json }}
        else:
          - service: persistent_notification.create
            data:
              title: "Valetudo: Missing segment_id"
              message: "Set var.living_room.segment_id to a valid number before running."

  valetudo_clean_kitchen:
    alias: "Clean: Kitchen"
    mode: queued
    sequence:
      - variables:
          seg: "{{ state_attr('var.kitchen','segment_id') }}"
      - if:
          - condition: template
            value_template: "{{ seg is number }}"
        then:
          - service: script.valetudo_clean_rooms
            data:
              segments: "Kitchen"
              iterations: 1
              mode: vacuum
              custom_order: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: cleaning
            timeout: "00:01:00"
            continue_on_timeout: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: docked
            timeout: "02:00:00"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_mark_cleaned %}
                      {{ json_update_mark_cleaned('var.kitchen') | from_json }}
              - conditions: []
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_needs_cleaning %}
                      {{ json_update_needs_cleaning('var.kitchen', true) | from_json }}
        else:
          - service: persistent_notification.create
            data:
              title: "Valetudo: Missing segment_id"
              message: "Set var.kitchen.segment_id to a valid number before running."

  valetudo_clean_powder_room:
    alias: "Clean: Powder Room"
    mode: queued
    sequence:
      - variables:
          seg: "{{ state_attr('var.powder_room','segment_id') }}"
      - if:
          - condition: template
            value_template: "{{ seg is number }}"
        then:
          - service: script.valetudo_clean_rooms
            data:
              segments: "Powder Room"
              iterations: 1
              mode: vacuum
              custom_order: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: cleaning
            timeout: "00:01:00"
            continue_on_timeout: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: docked
            timeout: "02:00:00"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_mark_cleaned %}
                      {{ json_update_mark_cleaned('var.powder_room') | from_json }}
              - conditions: []
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_needs_cleaning %}
                      {{ json_update_needs_cleaning('var.powder_room', true) | from_json }}
        else:
          - service: persistent_notification.create
            data:
              title: "Valetudo: Missing segment_id"
              message: "Set var.powder_room.segment_id to a valid number before running."

  valetudo_clean_downstairs_hallway:
    alias: "Clean: Downstairs Hallway"
    mode: queued
    sequence:
      - variables:
          seg: "{{ state_attr('var.downstairs_hallway','segment_id') }}"
      - if:
          - condition: template
            value_template: "{{ seg is number }}"
        then:
          - service: script.valetudo_clean_rooms
            data:
              segments: "Downstairs Hallway"
              iterations: 1
              mode: vacuum
              custom_order: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: cleaning
            timeout: "00:01:00"
            continue_on_timeout: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: docked
            timeout: "02:00:00"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_mark_cleaned %}
                      {{ json_update_mark_cleaned('var.downstairs_hallway') | from_json }}
              - conditions: []
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_needs_cleaning %}
                      {{ json_update_needs_cleaning('var.downstairs_hallway', true) | from_json }}
        else:
          - service: persistent_notification.create
            data:
              title: "Valetudo: Missing segment_id"
              message: "Set var.downstairs_hallway.segment_id to a valid number before running."

  valetudo_clean_laundry_room:
    alias: "Clean: Laundry Room"
    mode: queued
    sequence:
      - variables:
          seg: "{{ state_attr('var.laundry_room','segment_id') }}"
      - if:
          - condition: template
            value_template: "{{ seg is number }}"
        then:
          - service: script.valetudo_clean_rooms
            data:
              segments: "Laundry Room"
              iterations: 1
              mode: vacuum
              custom_order: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: cleaning
            timeout: "00:01:00"
            continue_on_timeout: true
          - wait_for_trigger:
              - platform: state
                entity_id: vacuum.valetudo_roborocks5
                to: docked
            timeout: "02:00:00"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ wait.completed }}"
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_mark_cleaned %}
                      {{ json_update_mark_cleaned('var.laundry_room') | from_json }}
              - conditions: []
                sequence:
                  - service: var.set
                    data: >
                      {% from 'custom_template/template.library.jinja' import json_update_needs_cleaning %}
                      {{ json_update_needs_cleaning('var.laundry_room', true) | from_json }}
        else:
          - service: persistent_notification.create
            data:
              title: "Valetudo: Missing segment_id"
              message: "Set var.laundry_room.segment_id to a valid number before running."
