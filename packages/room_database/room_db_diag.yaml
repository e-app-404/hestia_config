# Direct HTTP test sensors to debug the endpoint issue
template:
  - sensor:
      - name: "AppDaemon Health Direct Test"
        state: >
          {%- set status = state_attr('sensor.appdaemon_health_raw', 'status') -%}
          {{ status if status is not none else 'unknown' }}
        attributes:
          last_test: "{{ now().isoformat() }}"
          full_response: >
            {%- set obj = {
              'entity_exists': states('sensor.appdaemon_health_raw') not in ['unknown','unavailable',''],
              'state': states('sensor.appdaemon_health_raw'),
              'status': state_attr('sensor.appdaemon_health_raw','status') | default('unknown'),
              'message': state_attr('sensor.appdaemon_health_raw','message') | default('no-message'),
              'timestamp': state_attr('sensor.appdaemon_health_raw','timestamp') | default('')
            } -%}
            {{ obj }}

rest:
  - resource: "http://a0d7b954-appdaemon:5050/api/app/room_db_updater/room_db/health"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Health Raw"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message
          - timestamp

  # Additional diagnostics: probe both app-scoped and compat paths to isolate 404s
  - resource: "http://a0d7b954-appdaemon:5050/api/app/room_db_updater/health"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Health (app path)"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message
          - timestamp

  - resource: "http://a0d7b954-appdaemon:5050/api/appdaemon/room_db/health"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Health (appdaemon path)"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message
          - timestamp

  # AppDaemon legacy path variant with actual app name
  - resource: "http://a0d7b954-appdaemon:5050/api/appdaemon/room_db_updater/health"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Health (appdaemon app-name path)"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message
          - timestamp

  - resource: "http://a0d7b954-appdaemon:5050/api/app/room_db_updater/test"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Test Raw (app path)"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message

  - resource: "http://a0d7b954-appdaemon:5050/api/appdaemon/room_db_updater/test"
    method: GET
    timeout: 10
    scan_interval: 30
    sensor:
      - name: "AppDaemon Test Raw (appdaemon path)"
        value_template: >
          {% if value_json is defined and value_json.status is defined %}
            {{ value_json.status }}
          {% else %}
            {{ value | default('no_response') }}
          {% endif %}
        json_attributes:
          - status
          - message

# Shell commands for direct SQLite database operations (fallback/emergency use)
shell_command:
  # AppDaemon endpoint discovery - test different URL patterns
  test_appdaemon_endpoints: |
    echo "=== AppDaemon Endpoint Discovery ===" > /tmp/appdaemon_test.log 2>&1
    echo "Testing at $(date)" >> /tmp/appdaemon_test.log 2>&1
    echo "" >> /tmp/appdaemon_test.log 2>&1

    # Test different URL patterns
    for path in \
      "/api/app/room_db_updater/health" \
      "/api/app/room_db_updater/test" \
      "/api/appdaemon/room_db_updater/health" \
      "/api/appdaemon/health" \
      "/health" \
      "/test" \
      "/room_db_updater/health" \
      "/room_db_updater/test"
    do
      echo "Testing: http://a0d7b954-appdaemon:5050$path" >> /tmp/appdaemon_test.log 2>&1
      timeout 3 wget -q -O - "http://a0d7b954-appdaemon:5050$path" >> /tmp/appdaemon_test.log 2>&1 || echo "  -> FAILED" >> /tmp/appdaemon_test.log 2>&1
      echo "" >> /tmp/appdaemon_test.log 2>&1
    done

    echo "=== Test Complete ===" >> /tmp/appdaemon_test.log 2>&1
    cat /tmp/appdaemon_test.log

  view_appdaemon_test_results: |
    echo "=== AppDaemon Test Results ===" && echo ""
    if [ -f /tmp/appdaemon_test.log ]; then
      cat /tmp/appdaemon_test.log
    else
      echo "No test results found. Run shell_command.test_appdaemon_endpoints first."
    fi
