#══════════════════════════════════════════════════════════════════════════════
# ▶ PRESENCE SENSORS: Home Status ◀
# Loader: template: !include_dir_merge_list domain/templates/
# Schema: list of template blocks (sensor, binary_sensor)
#══════════════════════════════════════════════════════════════════════════════

- binary_sensor:
    - name: "Bedroom Presence (Beta)"
      unique_id: "bedroom_presence_beta"
      icon: mdi:home-map-marker
      state: >-
        {% set person_home = (states('person.evert') == 'home') %}
        {% set src = state_attr('person.evert','source') %}
        {% set via_src = src and states(src) == 'home' %}
        {% set desk = is_state('binary_sensor.desk_occupancy_beta','on') %}
        {% set bed_occ = is_state('binary_sensor.bedroom_occupancy_beta','on') %}
        {% set bed_motion = is_state('binary_sensor.bedroom_ottoman_motion_proxy','on') %}
        {% if person_home or via_src or desk or bed_occ or bed_motion %}on{% else %}off{% endif %}
      delay_off:
        minutes: 10
      attributes:
        area_id: "bedroom"
        floor_id: "sanctum"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "private"
        tier: "β"
        reliability: excellent
        description: |
          # Presence is on if: person.evert is home OR their tracker says home
          # OR desk presence is inferred OR bedroom occupancy/motion is active.
        last_updated: "2025-10-16"
        upstream_sources: >-
          {{ ["person.evert", "binary_sensor.desk_occupancy_beta", "binary_sensor.bedroom_occupancy_beta", "binary_sensor.bedroom_ottoman_motion_proxy"] | tojson }}
        source_count: "4"

    - name: "Desk Presence (Beta)"
      unique_id: "desk_presence_beta"
      icon: mdi:home-map-marker
      state: >-
        {% set present = (states('person.evert') == 'home') %}
        {% set desk_inferred = is_state('binary_sensor.desk_occupancy_beta', 'on') %}
        {% if present or desk_inferred %}on{% else %}off{% endif %}
      attributes:
        area_id: "desk"
        floor_id: "bedroom"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "private"
        tier: "β"
        upstream_sources: >-
          {{ ["person.evert", "binary_sensor.desk_occupancy_beta"] | tojson }}
        source_count: "2"
        reliability: excellent
        notes: |
          "Private area not used by other occupants"
        last_updated: "2025-10-16"

    - name: "Living Room Presence (Beta)"
      unique_id: "living_room_presence_beta"
      icon: mdi:home-map-marker
      state: >-
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home' and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      attributes:
        area_id: "living_room"
        floor_id: "downstairs"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "contextual_enhancement_only"
        subsystem: "hermes"
        area_type: "shared"
        tier: "β"
        reliability: poor
        notes: |
          "Provides contextual enhancement for timeouts/scenes only. Never used for blocking due to untracked housemate."
        last_updated: "2025-10-16"
        upstream_sources: >-
          {{ ["person.evert"] | tojson }}
        source_count: "1"

    - name: "Ensuite Presence (Beta)"
      unique_id: "ensuite_presence_beta"
      icon: mdi:home-map-marker
      state: >-
        {% set person_home = (states('person.evert') == 'home') %}
        {% set src = state_attr('person.evert','source') %}
        {% set via_src = src and states(src) == 'home' and (state_attr(src,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% set occ = is_state('binary_sensor.ensuite_occupancy_beta', 'on') %}
        {% set motion = is_state('binary_sensor.ensuite_motion_beta', 'on') %}
        {% set shower = is_state('binary_sensor.ensuite_shower_occupancy_epsilon', 'on') %}
        {% if person_home or via_src or occ or motion or shower %}on{% else %}off{% endif %}
      delay_off:
        minutes: 10
      attributes:
        area_id: "ensuite"
        floor_id: "sanctum"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "private"
        tier: "β"
        reliability: excellent
        notes: |
          Presence inferred from person.home status OR reliable tracker source OR
          local sensors: motion, occupancy, and shower composite occupancy.
          This is a private area with exclusive access.
        last_updated: "2025-10-18"
        upstream_sources: >-
          {{ ["person.evert", "binary_sensor.ensuite_occupancy_beta", "binary_sensor.ensuite_motion_beta", "binary_sensor.ensuite_shower_occupancy_epsilon"] | tojson }}
        source_count: "4"

    - name: "Hallway Downstairs Presence (Beta)"
      unique_id: "hallway_downstairs_presence_beta"
      state: >-
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home' and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      icon: mdi:home-map-marker
      attributes:
        area_id: "downstairs"
        floor_id: "hallway"
        area_type: "shared"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "contextual_enhancement_only"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Provides contextual enhancement for timeouts/scenes only. Never used for blocking due to untracked housemate."
        last_updated: "2025-10-18"
        upstream_sources: >-
          {{ ["person.evert"] | tojson }}
        source_count: "1"

    - name: "Hallway Upstairs Presence (Beta)"
      unique_id: "hallway_upstairs_presence_beta"
      state: >-
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home' and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      icon: mdi:home-map-marker
      attributes:
        area_id: "upstairs"
        floor_id: "hallway"
        area_type: "shared"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "contextual_enhancement_only"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Provides contextual enhancement for timeouts/scenes only. Never used for blocking due to untracked housemate."
        last_updated: "2025-10-18"
        upstream_sources: >-
          {{ ["person.evert"] | tojson }}
        source_count: "1"

    - name: "Kitchen Presence (Beta)"
      unique_id: "kitchen_presence_beta"
      icon: mdi:home-map-marker
      state: >-
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home' and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      attributes:
        area_id: "kitchen"
        floor_id: "downstairs"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "contextual_enhancement_only"
        area_type: "shared"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Provides contextual enhancement for timeouts/scenes only. Never used for blocking due to untracked housemate."
        last_updated: "2025-10-16"
        source_count: "0"
