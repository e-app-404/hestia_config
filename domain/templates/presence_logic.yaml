#══════════════════════════════════════════════════════════════════════════════
# ▶ PRESENCE SENSORS: Home Status ◀
# Loader: template: !include_dir_merge_list domain/templates/
# Schema: list of template blocks (sensor, binary_sensor)
#══════════════════════════════════════════════════════════════════════════════

- sensor:
    - name: "Evert Home Status"
      unique_id: "evert_home_status"
      icon: mdi:account-check
      state: >
        {% if states('person.evert') == 'home' %}
          Home
        {% else %}
          Away
        {% endif %}
      attributes:
        module: "zone_tracking"
        person_entity: "person.evert"
        rationale: "Indicates if person.evert is currently in the Home zone"
        raw_state: "{{ states('person.evert') }}"
        role: "zone_affiliation"
        subsystem: "perseus"
        tier: "γ"
        type: "presence_state"
        zone_reference: "home"
        last_updated: "{{ now().isoformat() }}"

- sensor:
    - name: "Evert Current Location"
      unique_id: "evert_current_location"
      icon: mdi:map-marker-radius
      device_class: presence
      state: >
        {% set zone = states('person.evert') %}
        {% if zone == 'not_home' %}
          Away
        {% else %}
          {{ zone | title }}
        {% endif %}
      attributes:
        module: "zone_tracking"
        person_entity: "person.evert"
        rationale: "Shows the last known zone or Away if outside defined zones"
        raw_state: "{{ states('person.evert') }}"
        role: "zone_tracking"
        subsystem: "perseus"
        tier: "γ"
        type: "current_zone"
        last_updated: "{{ now().isoformat() }}"

    - name: "Evert Last Known Zone"
      unique_id: "evert_last_known_zone"
      state: >
        {% set zone_id = states('person.evert') %}
        {% if zone_id == 'not_home' %}
          Away
        {% else %}
          {{ state_attr('zone.' ~ zone_id, 'friendly_name') or zone_id | title }}
        {% endif %}
      icon: >
        {% set zone_id = states('person.evert') %}
        {% if zone_id == 'not_home' %}
          mdi:map-marker-off
        {% else %}
          {{ state_attr('zone.' ~ zone_id, 'icon') or 'mdi:map-marker' }}
        {% endif %}
      attributes:
        module: "zone_tracking"
        person_entity: "person.evert"
        rationale: >
          Resolves person.evert's state to the friendly name of a zone entity,
          or 'Away' if outside all zones.
        raw_state: "{{ states('person.evert') }}"
        friendly_zone: >
          {% set zone_id = states('person.evert') %}
          {% if zone_id == 'not_home' %}
            Away
          {% else %}
            {{ state_attr('zone.' ~ zone_id, 'friendly_name') or zone_id | title }}
          {% endif %}
        role: "zone_tracking"
        subsystem: "perseus"
        tier: "γ"
        type: "last_known_zone"
        last_updated: "{{ now().isoformat() }}"

- binary_sensor:
    - name: "Bedroom Presence (Beta)"
      unique_id: "bedroom_presence_beta"
      device_class: presence
      icon: mdi:home-map-marker
      state: >-
        {% set person_home = (states('person.evert') == 'home') %}
        {% set src = state_attr('person.evert','source') %}
        {% set via_src = src and states(src) == 'home' %}
        {% set desk = is_state('binary_sensor.desk_presence_inferred','on') %}
        {% set bed_occ = is_state('binary_sensor.bedroom_occupancy_beta','on') %}
        {% set bed_motion = is_state('binary_sensor.bedroom_motion_beta','on') %}
        {% if person_home or via_src or desk or bed_occ or bed_motion %}on{% else %}off{% endif %}
      delay_off:
        minutes: 10
      attributes:
        area_id: "bedroom"
        floor_id: "sanctum"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "private"
        tier: "β"
        reliability: excellent
        description: |
          # Presence is on if: person.evert is home OR their tracker says home
          # OR desk presence is inferred OR bedroom occupancy/motion is active.

    # DESK PRESENCE (BETA)
    - name: "Desk Presence (Beta)"
      unique_id: "desk_presence_beta"
      device_class: presence
      icon: mdi:home-map-marker
      state: >-
        {% set present = (states('person.evert') == 'home') %}
        {% set desk_inferred = is_state('binary_sensor.desk_presence_inferred', 'on') %}
        {% if present or desk_inferred %}on{% else %}off{% endif %}
      attributes:
        area_id: "desk"
        floor_id: "bedroom"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "private"
        tier: "β"
        upstream_sources: >
          {{ ["binary_sensor.desk_presence_inferred"] | tojson }}
        reliability: excellent
        notes: |
          "Private area not used by other occupants"

    # LIVING ROOM PRESENCE (BETA)
    - name: "Living Room Presence (Beta)"
      unique_id: "living_room_presence_beta"
      device_class: presence
      icon: mdi:home-map-marker
      state: >-
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home' and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      attributes:
        area_id: "living_room"
        floor_id: "downstairs"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "asymmetric"
        subsystem: "hermes"
        area_type: "shared"
        tier: "β"
        reliability: poor
        notes: |
          "Common area used by untracked occupant - never rely on this sensor for blocking"

    # KITCHEN PRESENCE (BETA) - Always False (Untracked Housemate Area)
    - name: "Kitchen Presence (Beta)"
      unique_id: "kitchen_presence_beta"
      device_class: presence
      icon: mdi:home-map-marker
      state: "off"
      attributes:
        area_id: "kitchen"
        floor_id: "downstairs"
        module: "presence_inference"
        persons: ""
        strategy: "always_false"
        area_type: "shared"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Common area used by untracked occupant - never rely on this sensor for blocking"

    # ENSUITE PRESENCE (BETA) - Always False (Untracked Housemate Area)
    - name: "Ensuite Presence (Beta)"
      unique_id: "ensuite_presence_beta"
      device_class: presence
      icon: mdi:home-map-marker
      state: >-
        {# Presence is on when the tracked user is home.
           Uses person state and, as a fallback, the person's tracker source when reliable. #}
        {% set person_state = states('person.evert') %}
        {% set source = state_attr('person.evert', 'source') %}
        {% set via_person = (person_state == 'home') %}
        {% set via_source = source and states(source) == 'home'
           and (state_attr(source,'source_type') in ['gps','bluetooth_le','bluetooth']) %}
        {% if via_person or via_source %}on{% else %}off{% endif %}
      attributes:
        area_id: "ensuite"
        floor_id: "sanctum"
        module: "presence_inference"
        persons: "person.evert"
        strategy: "presence enhances, never blocks"
        area_type: "private"
        subsystem: "hermes"
        tier: "β"
        reliability: excellent
        notes: |
          "Private area not used by other occupants"

    # HALLWAY DOWNSTAIRS PRESENCE (BETA) - Always False (Common Area)
    - name: "Hallway Downstairs Presence (Beta)"
      unique_id: "hallway_downstairs_presence_beta"
      device_class: presence
      state: "off"
      icon: mdi:home-map-marker
      attributes:
        area_id: "downstairs"
        floor_id: "hallway"
        area_type: "shared"
        module: "presence_inference"
        persons: ""
        strategy: "always_false"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Common area used by untracked occupant - never rely on this sensor for blocking"

    # HALLWAY UPSTAIRS PRESENCE (BETA) - Always False (Common Area)
    - name: "Hallway Upstairs Presence (Beta)"
      unique_id: "hallway_upstairs_presence_beta"
      device_class: presence
      state: "off"
      icon: mdi:home-map-marker
      attributes:
        area_id: "upstairs"
        floor_id: "hallway"
        area_type: "shared"
        module: "presence_inference"
        persons: ""
        strategy: "always_false"
        subsystem: "hermes"
        tier: "β"
        reliability: poor
        notes: |
          "Common area used by untracked occupant - never rely on this sensor for blocking"
