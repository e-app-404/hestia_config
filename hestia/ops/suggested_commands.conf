# suggested_commands.conf â€” repeatable ops snippets (SAFE)
# Purpose: provide handy HA OS / Supervisor commands WITHOUT ever writing
# `http.server_host` (which disables the Supervisor watchdog).
#
# Usage: copy this file to /config/hestia/core/ops/suggested_commands.conf
# and paste commands from here into your HA terminal/SSH.

suggested_commands:
  ha_console:
    restart_core: "ha core restart"
    restart_core_safe: "ha core restart --safe-mode"
    restart_supervisor: "ha supervisor restart"
    rebuild_core: "ha core rebuild"
    reboot_host: "ha host reboot"
    shutdown_host: "ha host shutdown"
    logs_core: "ha core logs"
    logs_supervisor: "ha supervisor logs"

  # --- HTTP guardrails -----------------------------------------------------
  ha_http_guardrails:
    # Remove any lingering server_host in .storage (source of watchdog disable)
    reset_server_host: |
      ha core stop || true
      if [ -f /config/.storage/http ]; then
        jq 'del(.data.server_host)' /config/.storage/http > /config/.storage/http.new && mv /config/.storage/http.new /config/.storage/http
      fi
      if [ -f /config/.storage/core.http ]; then
        jq 'del(.data.server_host)' /config/.storage/core.http > /config/.storage/core.http.new && mv /config/.storage/core.http.new /config/.storage/core.http
      fi
      ha core start
    show_effective_http: |
      (jq '.data' /config/.storage/http 2>/dev/null || jq '.data' /config/.storage/core.http 2>/dev/null) | sed 's/\\n/\n/g'
    # Safe example block for configuration.yaml (NO server_host)
    http_safe_yaml_example: |
      cat <<'YAML'
      http:
        use_x_forwarded_for: true
        trusted_proxies:
          - 100.64.0.0/10    # Tailscale CGNAT range (if you use Tailscale)
          - 192.168.0.0/16   # Your LAN(s)
      YAML
    watchdog_verify: |
      ha supervisor logs | grep -i watchdog || true

  # --- Remote access notes (no server_host needed) -------------------------
  remote_access_examples:
    tailscale_http_ui: |
      echo "Open http://<your-tailscale-name>.ts.net:8123 in a browser."
      echo "If you need HTTPS on 443, use a reverse proxy add-on that terminates TLS and forwards to 8123."

  # --- Bluetooth diagnostics (HA OS friendly) ------------------------------
  bluetooth_diag:
    # Show controllers and power state (host side)
    list_controllers: "bluetoothctl list && echo && bluetoothctl show"
    # Show what HA Core thinks
    core_logs_filter: "ha core logs | grep -i 'bluetooth\|bluez\|habluetooth'"
    # Hardware inventory from Supervisor
    hardware_info: "ha hardware info | jq '.hardware.bluetooth'"
    # Bump Core to reinit bluetooth stack
    restart_core: "ha core restart"
    rebuild_core: "ha core rebuild"

  # --- SMB/Files convenience -----------------------------------------------
  smb_examples:
    macos_mount_config: "mount_smbfs //user@<host-or-tailscale>/config ~/mnt/ha-config"
    macos_unmount: "umount ~/mnt/ha-config"
    linux_mount_config: "sudo mount -t cifs //<host-or-tailscale>/config /mnt/ha-config -o username=<samba_user>"
    linux_unmount: "sudo umount /mnt/ha-config"

  # --- Safety notes --------------------------------------------------------
  notes:
    - "Never set http.server_host in YAML or .storage; it disables Supervisor watchdog."
    - "Prefer firewall/reverse-proxy controls over binding restrictions."
    - "Keep free space >15% and power stable to avoid I/O + OOM cascades."

  # --- Template patcher --------------------------------------------------
  template_patcher:
    patch_templates: "cd /config/hestia/tools/template_patcher && bash patch_ha_templates.sh"
    rollback_templates: "cd /config/hestia/tools/template_patcher && bash rollback_ha_templates.sh"
