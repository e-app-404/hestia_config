hades_config_index:
  version: 1
  generated_at: "2024-08-19T02:51:10Z"
  root_hint: "/config/hestia/config/"
  # sources lists the discovered base directories that match */hestia/config
  sources: []

  artifacts:
    network:
      - path: "/config/hestia/config/network/network.runtime.yaml"
        file: "network.runtime.yaml"
        title: null
        tags: ["layer3", "network"]

      - path: "/config/hestia/config/network/network.extract.yaml"
        file: "network.extract.yaml"
        title: null
        tags: ["layer3", "network"]

    storage:
      - path: "/config/hestia/config/storage/samba.yaml"
        file: "samba.yaml"
        title: null
        tags: ["samba", "hades"]

    preferences:
      - path: "/config/hestia/config/preferences/motion_timeout.configuration.yaml"
        file: "motion_timeout.configuration.yaml"
        title: null
        tags: ["preferences", "config"]

    registry:
      - path: "/config/hestia/config/registry/room_registry.yaml"
        file: "room_registry.yaml"
        title: null
        tags: ["registry", "hades"]

      - path: "/config/hestia/config/registry/rooms_registry.yaml"
        file: "rooms_registry.yaml"
        title: null
        tags: ["registry", "hades"]

    diagnostics:
      - path: "/config/hestia/config/diagnostics/network_probes.yaml"
        file: "network_probes.yaml"
        title: null
        tags: ["healthcheck", "hades"]

      - path: "/config/hestia/config/diagnostics/alert_thresholds.yaml"
        file: "alert_thresholds.yaml"
        title: null
        tags: ["healthcheck"]

      - path: "/config/hestia/config/diagnostics/glances.yaml"
        file: "glances.yaml"
        title: null
        tags: ["glances", "hades"]

      - path: "/config/hestia/config/diagnostics/git_push_logger_pipeline.yaml"
        file: "git_push_logger_pipeline.yaml"
        title: null
        tags: ["diagnostics", "hades"]

      - path: "/config/hestia/config/diagnostics/tailscale_reverse_proxy.diagnostics.yaml"
        file: "tailscale_reverse_proxy.diagnostics.yaml"
        title: null
        tags: ["tailscale", "diagnostics"]

  # Metadata sections (not validated as artifacts)
  metadata:
    retrieval_hints:
      # How I'll use this map to answer quickly and precisely
      - "Prefer category order: diagnostics → network → registry → storage when resolving troubleshooting questions."
      - "If query mentions VPN, prioritize files tagged tailscale/mullvad under network."
      - "If query mentions Synology/DSM or SMB errors, jump to storage/samba.yaml and diagnostics/glances.yaml."
      - "For room/entity questions, start with registry files."
      - "When alerts/thresholds are referenced, open diagnostics/alert_thresholds.yaml first."

    governance:
      tier_assumptions:
        network: "β–γ"
        diagnostics: "γ–δ"
        registry: "γ"
        storage: "μ"
      validation_expectations:
        - "YAML must load with safe_load; multi-doc allowed."
        - "Use approved tags from ALLOWED_TAGS set."
        - "Diagnostics artifacts should declare thresholds + grace windows."

    ci_checks:
      - id: yaml_load
        description: "All mapped files must parse via yaml.safe_load_all"
      - id: path_exists
        description: "All canonical paths must exist under /config/"
      - id: tag_policy
        description: "Only approved tags: see ALLOWED_TAGS in validator"

  governance:
    tier_assumptions:
      network: "β–γ"
      diagnostics: "γ–δ"
      topology: "γ"
      generic: "μ"
    validation_expectations:
      - "YAML must load with safe_load; multi-doc allowed."
      - "Use metadata_schema.yaml enums for tags where applicable."
      - "Diagnostics artifacts should declare thresholds + grace windows."

  ci_checks:
    - id: yaml_load
      description: "All mapped files must parse via yaml.safe_load_all"
    - id: path_exists
      description: "All canonical paths must exist under /config/"
    - id: tag_policy
      description: "Only approved tags: tailscale, mullvad, samba, glances, hades, layer3, healthcheck, home_assistant, synology_dsm"
