#‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# ‚ñ∂ CONFIG: Broadlink IR/RF Commands Configuration ‚óÄ
# File: /config/broadlink_commands.yaml
# This file contains the list of IR/RF commands for Broadlink devices
#‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

broadlink:
  - remotes:
      - entity_id: remote.living_room_broadlink_rm4_alpha
        devices: ["tower_fan"]
      - entity_id: remote.bedroom_broadlink_rm3_alpha
        area_id: bedroom
        devices: ["bedroom_hdmi_matrix", "desk_hdmi_matrix", "ofa_urc_7935_streamer", "ofa_urc_7145_evolve4"]

  - device: tower_fan
    area_id: living_room
    entity_id: remote.living_room_broadlink_rm4_alpha
    commands:
      power: { command: power, command_type: rf }
      speed:
        command: speed
        command_type: rf
        modes: ["low", "medium", "high"]
      oscillate:
        command: oscillate
        command_type: rf
        modes: ["on", "off"]
      mode:
        command: mode
        command_type: rf
        modes: ["one", "two", "three"]
      timer:
        command: timer
        command_type: rf
        modes: ["0.5h","1h","1.5h","2h","2.5h","3h","3.5h","4h","4.5h","5h","5.5h","6h","6.5h","7h","7.5h","8h"]
    example: >
      service: remote.send_command
      target: { entity_id: remote.living_room_broadlink_rm4_alpha }
      data: { device: tower_fan, command: power, command_type: rf }

  - device: bedroom_hdmi_matrix
    area_id: bedroom
    entity_id: remote.bedroom_broadlink_rm3_alpha
    commands:
      # ‚Äî‚Äî‚Äî Top row ‚Äî‚Äî‚Äî
      power: { command: power, command_type: ir, modes: ["toggle"] }
      arc: { command: arc, command_type: ir, modes: ["toggle"] }

      # ‚Äî‚Äî‚Äî Discrete routing ‚Äî‚Äî‚Äî
      # A = Video (HDMI OUT ‚Üí Bedroom TV)
      a_1: { command: a_1, command_type: ir } # Apple TV 4
      a_2: { command: a_2, command_type: ir } # Nintendo Switch
      a_3: { command: a_3, command_type: ir } # Playstation 4
      a_4: { command: a_4, command_type: ir } # Nintendo Wii

      # B = Audio (Optical OUT ‚Üí Sonos Ray)
      b_1: { command: b_1, command_type: ir } # Apple TV 4
      b_2: { command: b_2, command_type: ir } # Nintendo Switch
      b_3: { command: b_3, command_type: ir } # Playstation 4
      b_4: { command: b_4, command_type: ir } # Nintendo Wii
    
    example: >
      target:
        entity_id: remote.bedroom_broadlink_rm3_alpha
      data:
        device: bedroom_hdmi_matrix
        command: a_2

    script:
      bedroom_matrix_select_source:
        alias: "Bedroom Matrix ‚Äì Select Source (align A & B)"
        description: "Route both video (A) and audio (B) to the same input."
        fields:
          source:
            description: "Apple TV, Playstation 4, Nintendo Switch, Nintendo Wii"
            example: "Apple TV"
            required: true
            selector:
              select:
                options:
                  - Apple TV
                  - Playstation 4
                  - Nintendo Switch
                  - Nintendo Wii
          turn_on_tv:
            description: "Turn on the Bedroom TV first"
            default: true
        sequence:
          - if: "{{ turn_on_tv | default(true) }}"
            then:
              - action: media_player.turn_on
                target: { entity_id: media_player.bedroom_tv_alpha }
          - variables:
              map:
                "Apple TV": "1"

                "Playstation 4": "2"
                "Nintendo Switch": "3"
                "Nintendo Wii": "4"
              n: "{{ map[source] }}"
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: "a_{{ n }}" }
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: "b_{{ n }}" }

      bedroom_matrix_route_av:
        alias: "Bedroom Matrix ‚Äì Route A (video) & B (audio) separately"
        description: "Pick different sources for video (A) and audio (B)."
        fields:
          video_source:
            required: true
            selector:
              select:
                options:
                  - Apple TV
                  - Playstation 4
                  - Nintendo Switch
                  - Nintendo Wii
          audio_source:
            required: true
            selector:
              select:
                options:
                  - Apple TV
                  - Playstation 4
                  - Nintendo Switch
                  - Nintendo Wii
          turn_on_tv:
            default: true
            selector: { boolean: {} }
        sequence:
          - if: "{{ turn_on_tv | default(true) }}"
            then:
              - action: media_player.turn_on
                target: { entity_id: media_player.bedroom_tv_alpha }
          - variables:
              map:
                "Apple TV": "1"
                "Playstation 4": "2"
                "Nintendo Switch": "3"
                "Nintendo Wii": "4"
              v: "{{ map[video_source] }}"
              a: "{{ map[audio_source] }}"
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: "a_{{ v }}" }
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: "b_{{ a }}" }

      bedroom_matrix_power_toggle:
        alias: "HDMI Matrix ‚Äì Power"
        sequence:
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: power }

      bedroom_matrix_arc_toggle:
        alias: "HDMI Matrix ‚Äì ARC"
        sequence:
          - action: remote.send_command
            target: { entity_id: remote.bedroom_broadlink_rm3_alpha }
            data: { device: bedroom_hdmi_matrix, command: arc }

    lovelace:
      type: grid
      columns: 4
      square: false
      cards:
        - type: button
          name: Apple TV
          icon: mdi:apple
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_select_source
            data: { source: "Apple TV", turn_on_tv: true }

        - type: button
          name: Playstation 4
          icon: mdi:sony-playstation
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_select_source
            data: { source: "Playstation 4", turn_on_tv: true }

        - type: button
          name: Switch
          icon: mdi:nintendo-switch
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_select_source
            data: { source: "Nintendo Switch", turn_on_tv: true }

        - type: button
          name: Wii
          icon: mdi:gamepad-variant
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_select_source
            data: { source: "Nintendo Wii", turn_on_tv: true }

        - type: button
          name: Matrix Power
          icon: mdi:power
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_power_toggle

        - type: button
          name: ARC
          icon: mdi:audio-input-rca
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_arc_toggle

        # Example "A1 + B2"
        - type: button
          name: "Video: Apple ‚Ä¢ Audio: PS4"
          icon: mdi:monitor-speaker
          tap_action:
            action: perform-action
            perform_action: script.bedroom_matrix_route_av
            data:
              video_source: "Apple TV"
              audio_source: "Playstation 4"
              turn_on_tv: true

  - device: desk_hdmi_matrix
    area_id: desk
    entity_id: remote.bedroom_broadlink_rm3_alpha
    commands:
      # ‚Äî‚Äî‚Äî Routing ‚Äî‚Äî‚Äî
      hdmi_1: { command: "1", command_type: ir, modes: ["toggle"] } # Macbook
      hdmi_2: { command: "2", command_type: ir, modes: ["toggle"] } # RPI5 - Home Assistant Terminal
      hdmi_3: { command: "3", command_type: ir, modes: ["toggle"] } # Unassigned
      next: { command: next, command_type: ir, modes: ["toggle"] } # Cycles HDMI inputs

  - device: ofa_urc_7935_streamer 
    model: "URC 7935 Streamer"
    area_id: evert_sanctum
    entity_id: remote.bedroom_broadlink_rm3_alpha
    comments: "Streamer-focused layout; great fit for Apple TV. Use HDMI-CEC for volume if Sonos is on ARC/eARC."
    commands:
      # ‚Äî‚Äî‚Äî Apple TV Core ‚Äî‚Äî‚Äî
      up:
        command: up
        command_type: ir
        physical: "D-pad ‚Üë"
      down:
        command: down
        command_type: ir
        physical: "D-pad ‚Üì"
      left:
        command: left
        command_type: ir
        physical: "D-pad ‚Üê"
      right:
        command: right
        command_type: ir
        physical: "D-pad ‚Üí"
      select:
        command: select
        command_type: ir
        physical: "OK (center)"
      menu_back:
        command: menu
        command_type: ir
        physical: "BACK (‚Ü©Ô∏é)"
        apple_maps: "Menu / ‚Äπ"
      tv_control:
        command: home
        command_type: ir
        physical: "HOME (üè†)"
        apple_maps: "TV / Control Center"
      play_pause:
        command: play_pause
        command_type: ir
        physical: "PLAY/PAUSE (‚èØ #9)"
        alt: "Play icon (#16) if learn fails"
      skip_back:
        command: skip_back
        command_type: ir
        physical: "REPLAY (‚ü≤ #6)"
        notes: "Good for 10‚Äì15s back"
      rewind:
        command: rewind
        command_type: ir
        physical: "REWIND (‚è™ #8)"
      fast_forward:
        command: fast_forward
        command_type: ir
        physical: "FAST FORWARD (‚è© #10)"
      options:
        command: options
        command_type: ir
        physical: "OPTIONS (‚ãØ #7)"
        notes: "Use as extra function if an app supports it"
      # ‚Äî‚Äî‚Äî Useful spares for extra learns/macros ‚Äî‚Äî‚Äî
      app_n:
        command: spare_n
        command_type: ir
        physical: "N (Netflix #13)"
      app_a:
        command: spare_a
        command_type: ir
        physical: "A (Prime #14)"
      app_h:
        command: spare_h
        command_type: ir
        physical: "H (Hulu #15)"
      app_playicon:
        command: spare_play
        command_type: ir
        physical: "Play icon (#16)"
        notes: "Recommended fallback for Play/Pause"
      # ‚Äî‚Äî‚Äî Pass-through (not learned by Apple TV) ‚Äî‚Äî‚Äî
      vol_up:
        command: volume_up
        command_type: ir
        physical: "VOL +"
        not_learned_by_atv: true
      vol_down:
        command: volume_down
        command_type: ir
        physical: "VOL ‚àí"
        not_learned_by_atv: true
      mute:
        command: mute
        command_type: ir
        physical: "Mute"
        not_learned_by_atv: true
      tv_power:
        command: tv_power
        command_type: ir
        physical: "TV Power"
        not_learned_by_atv: true
      tv_input:
        command: tv_input
        command_type: ir
        physical: "TV Input"
        not_learned_by_atv: true
      streamer_pwr:
        command: streamer_power
        command_type: ir
        physical: "Power (streamer)"
        notes: "Apple TV doesn‚Äôt learn power; use for macro if desired"
        not_learned_by_atv: true
      chan_up:
        command: channel_up
        command_type: ir
        physical: "CH +"
        not_learned_by_atv: true
      chan_down:
        command: channel_down
        command_type: ir
        physical: "CH ‚àí"
        not_learned_by_atv: true
    example: |
      # Teach Apple TV using these physical keys in the Learn Remote wizard.
      # If PLAY/PAUSE fails, teach it using the Play icon (#16) instead.
        
  - device: ofa_urc_7145_evolve4
    model: "URC 7145 Evolve 4"
    area_id: evert_sanctum
    entity_id: remote.bedroom_broadlink_rm3_alpha
    comments: "Four-device universal; full transport cluster. Dedicate one mode (e.g., STB) to Apple TV."
    commands:
      # ‚Äî‚Äî‚Äî Apple TV Core ‚Äî‚Äî‚Äî
      up:
        command: up
        command_type: ir
        physical: "D-pad ‚Üë"
      down:
        command: down
        command_type: ir
        physical: "D-pad ‚Üì"
      left:
        command: left
        command_type: ir
        physical: "D-pad ‚Üê"
      right:
        command: right
        command_type: ir
        physical: "D-pad ‚Üí"
      select:
        command: select
        command_type: ir
        physical: "OK (center)"
      menu_back:
        command: menu
        command_type: ir
        physical: "MENU (or BACK)"
        apple_maps: "Menu / ‚Äπ"
      tv_control:
        command: home
        command_type: ir
        physical: "HOME key"
        apple_maps: "TV / Control Center"
      # ‚Äî‚Äî‚Äî Transport / Navigation ‚Äî‚Äî‚Äî
      play_pause:
        command: play_pause
        command_type: ir
        physical: "PLAY (‚ñ≤) mapped as toggle"
        alt: "PAUSE (II) also works; Apple TV just needs a unique IR"
      skip_back:
        command: skip_back
        command_type: ir
        physical: "PREV (‚èÆ) or REWIND (‚è™)"
      skip_forward:
        command: skip_forward
        command_type: ir
        physical: "NEXT (‚è≠) or FAST FORWARD (‚è©)"
      info_options:
        command: options
        command_type: ir
        physical: "INFO or SMART"
        notes: "Optional extra function for apps that support ‚ÄòOptions‚Äô"
      # ‚Äî‚Äî‚Äî Spares (assign if needed) ‚Äî‚Äî‚Äî
      red:
        command: spare_red
        command_type: ir
        physical: "Red"
      green:
        command: spare_green
        command_type: ir
        physical: "Green"
      yellow:
        command: spare_yellow
        command_type: ir
        physical: "Yellow"
      blue:
        command: spare_blue
        command_type: ir
        physical: "Blue"
      nettv:
        command: spare_nettv
        command_type: ir
        physical: "NETTV / ‚ÄòN‚Äô app key"
      
      # ‚Äî‚Äî‚Äî Pass-through (not learned by Apple TV) ‚Äî‚Äî‚Äî
      vol_up:
        command: volume_up
        command_type: ir
        physical: "VOL +"
        not_learned_by_atv: true
      vol_down:
        command: volume_down
        command_type: ir
        physical: "VOL ‚àí"
        not_learned_by_atv: true
      mute:
        command: mute
        command_type: ir
        physical: "Mute"
        not_learned_by_atv: true
      ch_up:
        command: channel_up
        command_type: ir
        physical: "CH +"
        not_learned_by_atv: true
      ch_down:
        command: channel_down
        command_type: ir
        physical: "CH ‚àí"
        not_learned_by_atv: true
      input:
        command: input
        command_type: ir
        physical: "AV / INPUT"
        not_learned_by_atv: true
      power:
        command: power
        command_type: ir
        physical: "Power"
        not_learned_by_atv: true
    example: |
      # Put the remote in your chosen device mode (e.g., STB), then run Apple TV
      # Learn Remote and present these physical keys in order. Use PLAY (‚ñ≤) for
      # Play/Pause toggle; Apple TV accepts any unique IR code for that role