hestia_content_allocation_rules:
  version: "2.0"
  
  config:
    purpose: "Runtime & Machine-First Configurations"
    file_patterns: ["*.yaml", "*.json", "*.conf", "*.ini"]
    content_types: ["device_integration", "network_topology", "system_preference", "runtime_config"]
    exclusions: ["documentation", "human_readable_guides", "temporary_files"]
    
    devices:
      purpose: "Hardware device integrations and configurations"
      required_attributes: ["device_type", "integration_method"]
      file_naming: "{device_name}.{yaml|conf}"
      content_validation: 
        - "must_contain: device configuration parameters"
        - "must_not_contain: documentation or guides"
      examples: ["broadlink.yaml", "hifi.yaml", "motion.yaml"]
    
    network:
      purpose: "Network infrastructure and connectivity configs"
      required_attributes: ["network_component", "topology_data"]
      file_naming: "{component}.{yaml|json|conf}"
      content_validation:
        - "must_contain: network parameters or topology"
        - "allowed_types: [runtime, extract, topology]"
      examples: ["network.runtime.yaml", "dns.topology.json"]
    
    preferences:
      purpose: "User interface and system preference configurations"
      required_attributes: ["preference_scope", "ui_component"]
      file_naming: "{component}.{yaml|conf}"
      content_validation:
        - "must_contain: preference or UI configuration"
      examples: ["lovelace.yaml", "motion_timeout.yaml"]
    
    storage:
      purpose: "Storage backend and data persistence configurations"
      required_attributes: ["storage_backend", "persistence_config"]
      file_naming: "{backend}.yaml"
      content_validation:
        - "must_contain: storage or backup configuration"
      examples: ["samba.yaml", "backup.yaml"]
    
    registry:
      purpose: "Index files and entity registries"
      required_attributes: ["registry_type", "index_scope"]
      file_naming: "{registry_name}.yaml"
      content_validation:
        - "must_contain: registry or index data"
        - "must_be: machine_parseable"
      examples: ["room_registry.yaml", "manifest.yaml"]
    
    diagnostics:
      purpose: "Monitoring, health checks, and diagnostic configurations"
      required_attributes: ["diagnostic_type", "monitoring_target"]
      file_naming: "{diagnostic_component}.yaml"
      content_validation:
        - "must_contain: diagnostic or monitoring config"
      examples: ["alert_thresholds.yaml", "network_probes.yaml"]
    
    preview:
      purpose: "Generated configuration previews (non-runtime)"
      required_attributes: ["preview_type", "generated_flag"]
      file_naming: "{component}.{conf|ini}"
      content_validation:
        - "must_be: generated_preview"
        - "must_not_be: runtime_loaded"
      examples: ["smb.conf"]
    
    system:
      purpose: "System-level and cross-component configurations"
      required_attributes: ["system_scope", "config_type"]
      file_naming: "{component}.conf"
      content_validation:
        - "must_contain: system-wide configuration"
      examples: ["cli.conf", "relationships.conf"]
    
    index:
      purpose: "Master indexes and manifests"
      required_attributes: ["index_scope", "manifest_type"]
      file_naming: "manifest.yaml"
      content_validation:
        - "must_contain: index or manifest data"
        - "must_reference: other config files"
      examples: ["manifest.yaml"]

  library:
    purpose: "Knowledge, Documentation & References"
    file_patterns: ["*.md", "*.yaml", "*.txt", "*.json"]
    content_types: ["documentation", "governance", "prompts", "context"]
    exclusions: ["runtime_config", "machine_operations"]
    
    docs:
      purpose: "Human-readable documentation and governance"
      required_attributes: ["doc_type", "human_readable"]
      subdirs:
        ADR:
          purpose: "Architecture Decision Records"
          file_naming: "ADR-{number}-{slug}.md"
          content_validation:
            - "must_contain: decision record format"
            - "must_have: front_matter"
        playbooks:
          purpose: "Operational procedures and runbooks"
          file_naming: "{procedure_name}.{md|yaml}"
          content_validation:
            - "must_contain: procedural instructions"
        governance:
          purpose: "System instructions and personas"
          file_naming: "{component}.yaml"
          content_validation:
            - "must_contain: governance or instruction data"
        historical:
          purpose: "Legacy and archived documentation"
          file_naming: "{legacy_doc}.md"
          content_validation:
            - "must_be: historical_reference"
    
    prompts:
      purpose: "Curated prompt library for AI interactions"
      required_attributes: ["prompt_category", "ai_context"]
      subdirs:
        _meta:
          purpose: "Prompt metadata and schemas"
          content_validation: ["must_contain: prompt_metadata"]
        automation:
          purpose: "Automation-related prompts"
          content_validation: ["must_contain: automation_prompt"]
        configuration:
          purpose: "Configuration generation prompts"
          content_validation: ["must_contain: config_generation_prompt"]
        diagnostics:
          purpose: "Troubleshooting and diagnostic prompts"
          content_validation: ["must_contain: diagnostic_prompt"]
        validation:
          purpose: "Validation and linting prompts"
          content_validation: ["must_contain: validation_prompt"]
    
    context:
      purpose: "Session context and rehydration data"
      required_attributes: ["context_type", "session_data"]
      subdirs:
        rehydration:
          purpose: "Session rehydration seeds"
          file_naming: "{session_id}/"
          content_validation: ["must_contain: session_context"]
        scaffolding:
          purpose: "Template scaffolds and frameworks"
          content_validation: ["must_contain: template_scaffold"]
        seeds:
          purpose: "Context seeds and memory variables"
          content_validation: ["must_contain: context_seed"]

  tools:
    purpose: "Scripts, Utilities & Automation"
    file_patterns: ["*.py", "*.sh", "*.js", "*.yaml"]
    content_types: ["executable_script", "utility", "automation", "validation"]
    exclusions: ["documentation", "configuration", "data_files"]
    
    prompt_prep:
      purpose: "Prompt library preparation and normalization tools"
      required_tools: ["prep_prompts.py", "validate_frontmatter.py"]
      cli_wrapper: "/config/bin/prompt-prep"
      content_validation: ["must_be: prompt_processing_tool"]
      
    catalog:
      purpose: "Prompt catalog management and synchronization tools"
      required_tools: ["place_in_catalog.py", "sync_copies.py", "validate_copies.py"]
      content_validation: ["must_be: catalog_management_tool"]
    
    utils:
      purpose: "General utilities and workspace maintenance tools"
      subdirs:
        backup: 
          purpose: "Backup file management and normalization"
          required_tools: ["normalize_backup_names.py"]
          content_validation: ["must_be: backup_utility"]
          adr_compliance: "ADR-0018 workspace lifecycle policies"
    
    validation_rules:
      - "must_be: executable OR utility_config"
      - "must_not_contain: runtime_configuration"
      - "must_not_contain: documentation_content"

  workspace:
    purpose: "Operations, Cache & Transient Files"
    file_patterns: ["*"]
    content_types: ["operational", "temporary", "cache", "archive"]
    exclusions: ["permanent_configuration", "documentation"]
    
    operations:
      purpose: "Active operational work and artifacts"
      subdirs:
        deploy: 
          purpose: "Deployment scripts and artifacts"
          content_validation: ["must_contain: deployment_artifact"]
        reports:
          purpose: "Generated reports and audit outputs"
          content_validation: ["must_be: generated_report"]
        guardrails:
          purpose: "Safety checks and validation scripts"
          content_validation: ["must_contain: validation_logic"]
        guides:
          purpose: "Operational guides and procedures"
          content_validation: ["must_contain: operational_procedure"]
    
    cache:
      purpose: "Temporary and work-in-progress files"
      subdirs:
        data: 
          purpose: "Transient data files"
          content_validation: ["must_be: temporary_data"]
        staging:
          purpose: "Staging area for processing"
          content_validation: ["must_be: staging_content"]
        scratch:
          purpose: "Short-lived patches and diffs"
          content_validation: ["must_be: temporary_patch"]
        out:
          purpose: "Job-scoped outputs and results"
          content_validation: ["must_be: job_output"]
    
    archive:
      purpose: "Long-term storage and historical data"
      subdirs:
        vault:
          purpose: "Secure storage and backups"
          content_validation: ["must_be: archived_backup"]
        deprecated:
          purpose: "Deprecated files awaiting removal"
          content_validation: ["must_be: deprecated_content"]
        legacy:
          purpose: "Legacy artifacts for reference"
          content_validation: ["must_be: legacy_reference"]

enforcement_commands:
  validation_script: "tools/utils/validators/hestia_structure_validator.py"
  index_checker: "tools/utils/validators/hestia_index_validator.py"
  path_scanner: "tools/utils/validators/scan_hardcoded_paths.sh"
  
validation_queries:
  content_fit: "python tools/utils/validators/validate_content_allocation.py --path {file_path}"
  structure_compliance: "tools/utils/validators/hestia_structure_validator.py --check-all"
  path_references: "tools/utils/validators/scan_hardcoded_paths.sh --scan-all"