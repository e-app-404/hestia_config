- logic_id: template_monitoring_notify
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/system/automations_template_monitoring.yaml'
  - +++ /mnt/data/output/rewritten_automations/template_monitoring_notify.yaml
  - '@@ -1,143 +1,11 @@'
  - '-# File: /config/hestia/automations/system/automations_template_monitoring.yaml'
  - '-'
  - ' - id: template_monitoring_notify'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Notify on Errors\""
  - '-  description: "Sends a persistent notification when template monitor triggers
    a problem"'
  - '+  alias: "\U0001F6E0\uFE0F Template Monitoring: Notify on Errors"'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Template Error Detected\""
  - '-        message: >-'
  - '-          {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-            {{ (state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or []) | count }} template entities have errors.'
  - '-'
  - '-            **Issues detected:**'
  - '-            {% for entity in state_attr(''sensor.template_error_diagnostics_mu'',
    ''problematic_entities'') or [] %}'
  - '-              - **{{ entity }}**'
  - '-            {% endfor %}'
  - '-          {% else %}'
  - '-            Template error sensor is unavailable. Check configuration.'
  - '-          {% endif %}'
  - '-'
  - '-          Check Developer Tools > States or view `sensor.template_error_diagnostics_mu`
    for details.'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_clear_notification'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Clear Error Notification\""
  - '-  description: "Dismisses template error notification when problem is resolved"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "off"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.dismiss'
  - '-      data:'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_attempt_recovery'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Attempt Recovery\""
  - '-  description: "Attempts to reload templates and update broken template entities"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  variables:'
  - '-    entities_to_update: >-'
  - '-      {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-        {{ state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or [] }}'
  - '-      {% else %}'
  - '-        []'
  - '-      {% endif %}'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "Attempting recovery for template errors"'
  - '-        level: warning'
  - '-    - service: homeassistant.reload_core_config'
  - '-    - delay: 5'
  - '-    - repeat:'
  - '-        for_each: "{{ entities_to_update }}"'
  - '-        sequence:'
  - '-          - service: homeassistant.update_entity'
  - '-            data:'
  - '-              entity_id: "{{ repeat.item }}"'
  - '-    - delay: 5'
  - '-    - service: template.reload'
  - '-    - delay: 5'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id: sensor.template_monitor_status_mu'
  - '-'
  - '-- alias: "Warn if skylight opens during risky conditions"'
  - '-  id: "alert_skylight_open_risky_conditions"'
  - '-  description: "Sends out a notification when the skylight window is detected
    open, and conditions are risky for either raining inside or burglars."'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.hallway_upstairs_skylight_contact_sensor_mtr_alpha'
  - '-      to: "on"'
- logic_id: template_monitoring_clear_notification
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/system/automations_template_monitoring.yaml'
  - +++ /mnt/data/output/rewritten_automations/template_monitoring_clear_notification.yaml
  - '@@ -1,143 +1,11 @@'
  - '-# File: /config/hestia/automations/system/automations_template_monitoring.yaml'
  - '-'
  - '-- id: template_monitoring_notify'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Notify on Errors\""
  - '-  description: "Sends a persistent notification when template monitor triggers
    a problem"'
  - '+- id: template_monitoring_clear_notification'
  - '+  alias: "\U0001F6E0\uFE0F Template Monitoring: Clear Error Notification"'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Template Error Detected\""
  - '-        message: >-'
  - '-          {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-            {{ (state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or []) | count }} template entities have errors.'
  - '-'
  - '-            **Issues detected:**'
  - '-            {% for entity in state_attr(''sensor.template_error_diagnostics_mu'',
    ''problematic_entities'') or [] %}'
  - '-              - **{{ entity }}**'
  - '-            {% endfor %}'
  - '-          {% else %}'
  - '-            Template error sensor is unavailable. Check configuration.'
  - '-          {% endif %}'
  - '-'
  - '-          Check Developer Tools > States or view `sensor.template_error_diagnostics_mu`
    for details.'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_clear_notification'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Clear Error Notification\""
  - '-  description: "Dismisses template error notification when problem is resolved"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "off"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.dismiss'
  - '-      data:'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_attempt_recovery'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Attempt Recovery\""
  - '-  description: "Attempts to reload templates and update broken template entities"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  variables:'
  - '-    entities_to_update: >-'
  - '-      {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-        {{ state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or [] }}'
  - '-      {% else %}'
  - '-        []'
  - '-      {% endif %}'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "Attempting recovery for template errors"'
  - '-        level: warning'
  - '-    - service: homeassistant.reload_core_config'
  - '-    - delay: 5'
  - '-    - repeat:'
  - '-        for_each: "{{ entities_to_update }}"'
  - '-        sequence:'
  - '-          - service: homeassistant.update_entity'
  - '-            data:'
  - '-              entity_id: "{{ repeat.item }}"'
  - '-    - delay: 5'
  - '-    - service: template.reload'
  - '-    - delay: 5'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id: sensor.template_monitor_status_mu'
  - '-'
  - '-- alias: "Warn if skylight opens during risky conditions"'
  - '-  id: "alert_skylight_open_risky_conditions"'
  - '-  description: "Sends out a notification when the skylight window is detected
    open, and conditions are risky for either raining inside or burglars."'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.hallway_upstairs_skylight_contact_sensor_mtr_alpha'
- logic_id: template_monitoring_attempt_recovery
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/system/automations_template_monitoring.yaml'
  - +++ /mnt/data/output/rewritten_automations/template_monitoring_attempt_recovery.yaml
  - '@@ -1,143 +1,11 @@'
  - '-# File: /config/hestia/automations/system/automations_template_monitoring.yaml'
  - '-'
  - '-- id: template_monitoring_notify'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Notify on Errors\""
  - '-  description: "Sends a persistent notification when template monitor triggers
    a problem"'
  - '+- id: template_monitoring_attempt_recovery'
  - '+  alias: "\U0001F6E0\uFE0F Template Monitoring: Attempt Recovery"'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Template Error Detected\""
  - '-        message: >-'
  - '-          {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-            {{ (state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or []) | count }} template entities have errors.'
  - '-'
  - '-            **Issues detected:**'
  - '-            {% for entity in state_attr(''sensor.template_error_diagnostics_mu'',
    ''problematic_entities'') or [] %}'
  - '-              - **{{ entity }}**'
  - '-            {% endfor %}'
  - '-          {% else %}'
  - '-            Template error sensor is unavailable. Check configuration.'
  - '-          {% endif %}'
  - '-'
  - '-          Check Developer Tools > States or view `sensor.template_error_diagnostics_mu`
    for details.'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_clear_notification'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Clear Error Notification\""
  - '-  description: "Dismisses template error notification when problem is resolved"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "off"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.dismiss'
  - '-      data:'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_attempt_recovery'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Attempt Recovery\""
  - '-  description: "Attempts to reload templates and update broken template entities"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  variables:'
  - '-    entities_to_update: >-'
  - '-      {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-        {{ state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or [] }}'
  - '-      {% else %}'
  - '-        []'
  - '-      {% endif %}'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "Attempting recovery for template errors"'
  - '-        level: warning'
  - '-    - service: homeassistant.reload_core_config'
  - '-    - delay: 5'
  - '-    - repeat:'
  - '-        for_each: "{{ entities_to_update }}"'
  - '-        sequence:'
  - '-          - service: homeassistant.update_entity'
  - '-            data:'
  - '-              entity_id: "{{ repeat.item }}"'
  - '-    - delay: 5'
  - '-    - service: template.reload'
  - '-    - delay: 5'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id: sensor.template_monitor_status_mu'
  - '-'
  - '-- alias: "Warn if skylight opens during risky conditions"'
  - '-  id: "alert_skylight_open_risky_conditions"'
  - '-  description: "Sends out a notification when the skylight window is detected
    open, and conditions are risky for either raining inside or burglars."'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.hallway_upstairs_skylight_contact_sensor_mtr_alpha'
- logic_id: alert_skylight_open_risky_conditions
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/system/automations_template_monitoring.yaml'
  - +++ /mnt/data/output/rewritten_automations/alert_skylight_open_risky_conditions.yaml
  - '@@ -1,143 +1,21 @@'
  - '-# File: /config/hestia/automations/system/automations_template_monitoring.yaml'
  - '-'
  - '-- id: template_monitoring_notify'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Notify on Errors\""
  - '-  description: "Sends a persistent notification when template monitor triggers
    a problem"'
  - '+- id: alert_skylight_open_risky_conditions'
  - '+  alias: Warn if skylight opens during risky conditions'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Template Error Detected\""
  - '-        message: >-'
  - '-          {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-            {{ (state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or []) | count }} template entities have errors.'
  - '-'
  - '-            **Issues detected:**'
  - '-            {% for entity in state_attr(''sensor.template_error_diagnostics_mu'',
    ''problematic_entities'') or [] %}'
  - '-              - **{{ entity }}**'
  - '-            {% endfor %}'
  - '-          {% else %}'
  - '-            Template error sensor is unavailable. Check configuration.'
  - '-          {% endif %}'
  - '-'
  - '-          Check Developer Tools > States or view `sensor.template_error_diagnostics_mu`
    for details.'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_clear_notification'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Clear Error Notification\""
  - '-  description: "Dismisses template error notification when problem is resolved"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "off"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: persistent_notification.dismiss'
  - '-      data:'
  - '-        notification_id: template_errors'
  - '-'
  - '-- id: template_monitoring_attempt_recovery'
  - "-  alias: \"\U0001F6E0\uFE0F Template Monitoring: Attempt Recovery\""
  - '-  description: "Attempts to reload templates and update broken template entities"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.template_monitor_problems_epsilon'
  - '-      to: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  variables:'
  - '-    entities_to_update: >-'
  - '-      {% if ''sensor.template_error_diagnostics_mu'' in states %}'
  - '-        {{ state_attr(''sensor.template_error_diagnostics_mu'', ''problematic_entities'')
    or [] }}'
  - '-      {% else %}'
  - '-        []'
  - '-      {% endif %}'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "Attempting recovery for template errors"'
  - '-        level: warning'
  - '-    - service: homeassistant.reload_core_config'
  - '-    - delay: 5'
  - '-    - repeat:'
  - '-        for_each: "{{ entities_to_update }}"'
  - '-        sequence:'
  - '-          - service: homeassistant.update_entity'
  - '-            data:'
  - '-              entity_id: "{{ repeat.item }}"'
  - '-    - delay: 5'
  - '-    - service: template.reload'
  - '-    - delay: 5'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id: sensor.template_monitor_status_mu'
  - '-'
  - '-- alias: "Warn if skylight opens during risky conditions"'
  - '-  id: "alert_skylight_open_risky_conditions"'
  - '-  description: "Sends out a notification when the skylight window is detected
    open, and conditions are risky for either raining inside or burglars."'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.hallway_upstairs_skylight_contact_sensor_mtr_alpha'
- logic_id: automation_ensuite_lighting_motion
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_ensuite_lighting_motion.yaml
  - '@@ -1,162 +1,16 @@'
  - -# Ensuite Lighting Automations
  - ' - id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '+  alias: Ensuite Lighting - Motion'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.ensuite_occupancy_beta'
  - '+  - platform: state'
  - '+    entity_id: script.dispatch_light_state'
  - '   condition:'
  - '-    - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "16:00:00"'
  - '-              before: "20:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
- logic_id: automation_ensuite_fan_occupancy
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_ensuite_fan_occupancy.yaml
  - '@@ -1,162 +1,11 @@'
  - -# Ensuite Lighting Automations
  - '-- id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+- id: automation_ensuite_fan_occupancy'
  - '+  alias: Ensuite Fan - Occupancy'
  - '+  mode: restart'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "16:00:00"'
  - '-              before: "20:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_evening'
  - '-'
- logic_id: automation_living_room_motion_lights
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_living_room_motion_lights.yaml
  - '@@ -1,162 +1,14 @@'
  - -# Ensuite Lighting Automations
  - '-- id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '+- id: automation_living_room_motion_lights'
  - '+  alias: Living Room Lights by Time + Motion'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.living_room_presence_gamma'
  - '   condition:'
  - '-    - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "16:00:00"'
  - '-              before: "20:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_evening'
- logic_id: automation_downstairs_lights_motion
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_downstairs_lights_motion.yaml
  - '@@ -1,162 +1,19 @@'
  - -# Ensuite Lighting Automations
  - '-- id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '+- id: automation_downstairs_lights_motion'
  - '+  alias: Motion-activated Downstairs Lights (PM - AM)'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.hallway_downstairs_motion_beta'
  - '+  - platform: state'
  - '+    entity_id: script.dispatch_light_state'
  - '   condition:'
  - '+  - condition: or'
  - '+    conditions:'
  - '     - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '+      after: ''15:00:00'''
  - '     - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "16:00:00"'
- logic_id: automation_kitchen_motion_light
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_kitchen_motion_light.yaml
  - '@@ -1,162 +1,16 @@'
  - -# Ensuite Lighting Automations
  - '-- id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '+- id: automation_kitchen_motion_light'
  - '+  alias: Kitchen Light - Motion'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.kitchen_motion_beta'
  - '+  - platform: state'
  - '+    entity_id: script.dispatch_light_state'
  - '   condition:'
  - '-    - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "16:00:00"'
  - '-              before: "20:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
- logic_id: automation_fallback_presence_detection
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hermes_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/automation_fallback_presence_detection.yaml
  - '@@ -1,162 +1,20 @@'
  - -# Ensuite Lighting Automations
  - '-- id: automation_ensuite_lighting_motion'
  - '-  alias: "Ensuite Lighting - Motion"'
  - '-  description: "Turn on Ensuite lighting when motion is detected during active
    hours"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+- id: automation_fallback_presence_detection'
  - '+  alias: Fallback Presence Detection'
  - '+  mode: restart'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.presence_detection_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.trigger_manual_presence_fallback'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.turn_off'
  - '+  - platform: state'
  - '+    entity_id: script.fallback_presence_detection'
  - '   condition:'
  - '-    - condition: time'
  - '-      after: "05:30:00"'
  - '-      before: "22:00:00"'
  - '-  action:'
  - '-    - service: script.dispatch_light_state'
  - '-      target:'
  - '-        area_id: ensuite'
  - '-'
  - -# Ensuite Fan Automations
  - '-- id: automation_ensuite_fan_occupancy'
  - '-  alias: "Ensuite Fan - Occupancy"'
  - '-  description: "Turn fan on while occupied, off after 15 minutes of vacancy"'
  - '-  mode: restart'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "on"'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-      to: "off"'
  - '-      for: "00:15:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.ensuite_occupancy_beta'
  - '-              state: "off"'
  - '-              for: "00:15:00"'
  - '-          sequence:'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-'
  - -# Living Room Lighting Automation
  - '-- id: automation_living_room_motion_lights'
  - '-  alias: "Living Room Lights by Time + Motion"'
  - '-  description: "Set different scenes in the living room based on motion and
    time of day"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_presence_gamma'
  - '-      to: "on"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      after: "06:00:00"'
  - '-      before: "23:00:00"'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: time'
  - '-              after: "06:00:00"'
  - '-              before: "11:00:00"'
  - '-          sequence:'
  - '-            - service: scene.turn_on'
  - '-              target:'
  - '-                entity_id: scene.living_room_morning'
  - '-        - conditions:'
- logic_id: publish_omega_room_registry
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/publish_omega_room_registry.yaml
  - '@@ -1,129 +1,9 @@'
  - '-'
  - ' - id: publish_omega_room_registry'
  - '   alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "02:00:00"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      weekday:'
  - '-        - sun'
- logic_id: publish_omega_device_registry
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/publish_omega_device_registry.yaml
  - '@@ -1,129 +1,9 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - ' - id: publish_omega_device_registry'
  - '   alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "02:00:00"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      weekday:'
  - '-        - sun'
- logic_id: publish_alpha_sensor_registry
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/publish_alpha_sensor_registry.yaml
  - '@@ -1,129 +1,9 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - ' - id: publish_alpha_sensor_registry'
  - '   alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "02:00:00"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      weekday:'
  - '-        - sun'
- logic_id: publish_alpha_light_registry
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/publish_alpha_light_registry.yaml
  - '@@ -1,129 +1,9 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - ' - id: publish_alpha_light_registry'
  - '   alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "02:00:00"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      weekday:'
  - '-        - sun'
- logic_id: mnemo_init_post_boot
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/mnemo_init_post_boot.yaml
  - '@@ -1,129 +1,9 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - ' - id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '+  alias: mnemo_init_post_boot'
  - '   mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "02:00:00"'
  - '-  condition:'
  - '-    - condition: time'
  - '-      weekday:'
- logic_id: mnemo_daily_snapshot
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/mnemo_daily_snapshot.yaml
  - '@@ -1,129 +1,14 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '+- id: mnemo_daily_snapshot'
  - '+  alias: ''Mnemosyne: Daily system snapshot'''
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.maintenance_mode'
  - '   condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
- logic_id: mnemo_weekly_comprehensive
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/mnemo_weekly_comprehensive.yaml
  - '@@ -1,129 +1,12 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '+- id: mnemo_weekly_comprehensive'
  - '+  alias: ''Mnemosyne: Weekly comprehensive backup'''
  - '   mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '+  trigger: []'
  - '   condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
- logic_id: mnemo_emergency_snapshot
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/hephaestus_automations.yaml'
  - +++ /mnt/data/output/rewritten_automations/mnemo_emergency_snapshot.yaml
  - '@@ -1,129 +1,13 @@'
  - '-'
  - '-- id: publish_omega_room_registry'
  - '-  alias: Publish Omega Room Registry to MQTT Automation'
  - '+- id: mnemo_emergency_snapshot'
  - '+  alias: ''Mnemosyne: Emergency snapshot before updates'''
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_room'
  - '-        payload: "{{ states(''sensor.omega_room_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_omega_device_registry'
  - '-  alias: Publish Omega Device Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/omega_device'
  - '-        payload: "{{ states(''sensor.omega_device_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_sensor_registry'
  - '-  alias: Publish Alpha Sensor Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_sensor'
  - '-        payload: "{{ states(''sensor.alpha_sensor_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - '-- id: publish_alpha_light_registry'
  - '-  alias: Publish Alpha Light Registry to MQTT Automation'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: mqtt.publish'
  - '-      data_template:'
  - '-        topic: hestia/registry/alpha_light'
  - '-        payload: "{{ states(''sensor.alpha_light_registry_raw'') }}"'
  - '-        retain: true'
  - '-'
  - -# ====================================================================
  - '-# CRITICAL: Boot-time package installation and patching'
  - -# ====================================================================
  - '-- id: mnemo_init_post_boot'
  - '-  alias: "Mnemosyne: Ensure prerequisites at HA boot"'
  - '-  description: "Install required packages and apply patches after HA container
    restart"'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: shell_command.mnemo_fix'
  - '-    - delay: "00:00:30"  # Allow time for packages to install'
  - '-    - service: shell_command.mnemo_diagnose  # Verify system health'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Scheduled snapshot creation
  - -# ====================================================================
  - '-- id: mnemo_daily_snapshot'
  - '-  alias: "Mnemosyne: Daily system snapshot"'
  - '-  description: "Create comprehensive system snapshot daily at 3 AM"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "03:00:00"'
  - '-  condition:'
  - '-    # Only run if not in maintenance mode (optional)'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.maintenance_mode'
  - '-      state: "off"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_refresh  # Full refresh chain'
  - '-    - delay: "00:01:00"  # Allow completion'
  - '-    - service: shell_command.mnemo_status   # Log final status'
  - '-  mode: single'
  - '-'
  - -# ====================================================================
  - -# Weekly comprehensive backup
  - -# ====================================================================
  - '-- id: mnemo_weekly_comprehensive'
  - '-  alias: "Mnemosyne: Weekly comprehensive backup"'
  - '-  description: "Full system backup with all phases on Sunday"'
  - '-  trigger:'
  - '-    - platform: time'
- logic_id: macbook_charger_status
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/soteria_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/macbook_charger_status.yaml
  - '@@ -1,112 +1,11 @@'
  - '-'
  - ' - id: macbook_charger_status'
  - '   alias: MacBook Charger Cable Status'
  - '   mode: restart'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.macbook_internal_battery_state'
  - '-      attribute: Is Charging'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == true }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: >'
  - '-                  MacBook connected to power. Battery at {{ state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Current Capacity'') }}%.'
  - '-                  {% set time_to_full = state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Time to Full Charge'') %}'
  - '-                  {% if time_to_full is number and time_to_full > 0 %}'
  - '-                    ({{ time_to_full }} minutes until full)'
  - '-                  {% endif %}'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == false }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: MacBook disconnected from power.'
  - '-'
  - '-- id: monitor_disconnect_powerdown'
  - "-  alias: \"Monitor Disconnect \u2013 Power Down Display + Backlight\""
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') != "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: switch.hp27i_monitor'
  - '-      state: "on"'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: switch.turn_off'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-    - service: light.turn_off'
  - '-      target:'
  - '-        entity_id: light.monitor_led_backlight'
  - '-'
  - '-- id: monitor_reconnect_wakeup'
  - "-  alias: \"Monitor Reconnect \u2013 Wake Monitor + Conditional Light\""
  - '-  mode: restart'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') == "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  action:'
  - '-    - service: switch.turn_on'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv1'
  - '-                  state: "on"'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv2'
  - '-                  state: "on"'
  - '-          sequence:'
  - '-            - service: light.turn_on'
  - '-              target:'
  - '-                entity_id: light.monitor_led_backlight'
  - '-              data:'
  - '-                brightness: 150'
  - '-                effect: "Candlelight"  # gentle ambient startup effect'
  - '-'
  - '-'
  - '-- id: valetudo_morning_deep_clean'
  - '-  alias: "Valetudo Morning Short Clean"'
  - '-  trigger:'
  - '-    - platform: time'
  - '-      at: "06:30:00"'
  - '-  condition:'
- logic_id: monitor_disconnect_powerdown
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/soteria_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/monitor_disconnect_powerdown.yaml
  - '@@ -1,112 +1,18 @@'
  - '-'
  - '-- id: macbook_charger_status'
  - '-  alias: MacBook Charger Cable Status'
  - '-  mode: restart'
  - '+- id: monitor_disconnect_powerdown'
  - '+  alias: "Monitor Disconnect \u2013 Power Down Display + Backlight"'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.macbook_internal_battery_state'
  - '-      attribute: Is Charging'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == true }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: >'
  - '-                  MacBook connected to power. Battery at {{ state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Current Capacity'') }}%.'
  - '-                  {% set time_to_full = state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Time to Full Charge'') %}'
  - '-                  {% if time_to_full is number and time_to_full > 0 %}'
  - '-                    ({{ time_to_full }} minutes until full)'
  - '-                  {% endif %}'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == false }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: MacBook disconnected from power.'
  - '-'
  - '-- id: monitor_disconnect_powerdown'
  - "-  alias: \"Monitor Disconnect \u2013 Power Down Display + Backlight\""
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') != "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '+  - platform: state'
  - '+    entity_id: light.turn_off'
  - '+  - platform: state'
  - '+    entity_id: switch.hp27i_monitor'
  - '+  - platform: state'
  - '+    entity_id: switch.turn_off'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: switch.hp27i_monitor'
  - '-      state: "on"'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: switch.turn_off'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-    - service: light.turn_off'
  - '-      target:'
  - '-        entity_id: light.monitor_led_backlight'
  - '-'
  - '-- id: monitor_reconnect_wakeup'
  - "-  alias: \"Monitor Reconnect \u2013 Wake Monitor + Conditional Light\""
  - '-  mode: restart'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') == "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  action:'
  - '-    - service: switch.turn_on'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv1'
  - '-                  state: "on"'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv2'
  - '-                  state: "on"'
  - '-          sequence:'
  - '-            - service: light.turn_on'
  - '-              target:'
  - '-                entity_id: light.monitor_led_backlight'
  - '-              data:'
  - '-                brightness: 150'
- logic_id: monitor_reconnect_wakeup
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/soteria_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/monitor_reconnect_wakeup.yaml
  - '@@ -1,112 +1,11 @@'
  - '-'
  - '-- id: macbook_charger_status'
  - '-  alias: MacBook Charger Cable Status'
  - '+- id: monitor_reconnect_wakeup'
  - '+  alias: "Monitor Reconnect \u2013 Wake Monitor + Conditional Light"'
  - '   mode: restart'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.macbook_internal_battery_state'
  - '-      attribute: Is Charging'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == true }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: >'
  - '-                  MacBook connected to power. Battery at {{ state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Current Capacity'') }}%.'
  - '-                  {% set time_to_full = state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Time to Full Charge'') %}'
  - '-                  {% if time_to_full is number and time_to_full > 0 %}'
  - '-                    ({{ time_to_full }} minutes until full)'
  - '-                  {% endif %}'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == false }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: MacBook disconnected from power.'
  - '-'
  - '-- id: monitor_disconnect_powerdown'
  - "-  alias: \"Monitor Disconnect \u2013 Power Down Display + Backlight\""
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') != "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: switch.hp27i_monitor'
  - '-      state: "on"'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: switch.turn_off'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-    - service: light.turn_off'
  - '-      target:'
  - '-        entity_id: light.monitor_led_backlight'
  - '-'
  - '-- id: monitor_reconnect_wakeup'
  - "-  alias: \"Monitor Reconnect \u2013 Wake Monitor + Conditional Light\""
  - '-  mode: restart'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') == "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  action:'
  - '-    - service: switch.turn_on'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv1'
  - '-                  state: "on"'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv2'
  - '-                  state: "on"'
  - '-          sequence:'
  - '-            - service: light.turn_on'
  - '-              target:'
  - '-                entity_id: light.monitor_led_backlight'
  - '-              data:'
  - '-                brightness: 150'
  - '-                effect: "Candlelight"  # gentle ambient startup effect'
  - '-'
  - '-'
  - '-- id: valetudo_morning_deep_clean'
  - '-  alias: "Valetudo Morning Short Clean"'
  - '-  trigger:'
  - '-    - platform: time'
- logic_id: valetudo_morning_deep_clean
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/soteria_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/valetudo_morning_deep_clean.yaml
  - '@@ -1,112 +1,16 @@'
  - '-'
  - '-- id: macbook_charger_status'
  - '-  alias: MacBook Charger Cable Status'
  - '-  mode: restart'
  - '+- id: valetudo_morning_deep_clean'
  - '+  alias: Valetudo Morning Short Clean'
  - '+  mode: null'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.macbook_internal_battery_state'
  - '-      attribute: Is Charging'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == true }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: >'
  - '-                  MacBook connected to power. Battery at {{ state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Current Capacity'') }}%.'
  - '-                  {% set time_to_full = state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Time to Full Charge'') %}'
  - '-                  {% if time_to_full is number and time_to_full > 0 %}'
  - '-                    ({{ time_to_full }} minutes until full)'
  - '-                  {% endif %}'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == false }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: MacBook disconnected from power.'
  - '-'
  - '-- id: monitor_disconnect_powerdown'
  - "-  alias: \"Monitor Disconnect \u2013 Power Down Display + Backlight\""
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') != "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.enable_daily_clean'
  - '+  - platform: state'
  - '+    entity_id: script.valetudo_deep_clean'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: switch.hp27i_monitor'
  - '-      state: "on"'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: switch.turn_off'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-    - service: light.turn_off'
  - '-      target:'
  - '-        entity_id: light.monitor_led_backlight'
  - '-'
  - '-- id: monitor_reconnect_wakeup'
  - "-  alias: \"Monitor Reconnect \u2013 Wake Monitor + Conditional Light\""
  - '-  mode: restart'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') == "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  action:'
  - '-    - service: switch.turn_on'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv1'
  - '-                  state: "on"'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv2'
  - '-                  state: "on"'
  - '-          sequence:'
  - '-            - service: light.turn_on'
  - '-              target:'
  - '-                entity_id: light.monitor_led_backlight'
  - '-              data:'
  - '-                brightness: 150'
  - '-                effect: "Candlelight"  # gentle ambient startup effect'
  - '-'
- logic_id: valetudo_afternoon_short_clean
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/subsystems/soteria_automations_combined.yaml'
  - +++ /mnt/data/output/rewritten_automations/valetudo_afternoon_short_clean.yaml
  - '@@ -1,112 +1,16 @@'
  - '-'
  - '-- id: macbook_charger_status'
  - '-  alias: MacBook Charger Cable Status'
  - '-  mode: restart'
  - '+- id: valetudo_afternoon_short_clean'
  - '+  alias: Valetudo Morning Short Clean'
  - '+  mode: null'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.macbook_internal_battery_state'
  - '-      attribute: Is Charging'
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == true }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: >'
  - '-                  MacBook connected to power. Battery at {{ state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Current Capacity'') }}%.'
  - '-                  {% set time_to_full = state_attr(''sensor.macbook_hass_internal_battery_state'',
    ''Time to Full Charge'') %}'
  - '-                  {% if time_to_full is number and time_to_full > 0 %}'
  - '-                    ({{ time_to_full }} minutes until full)'
  - '-                  {% endif %}'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ trigger.to_state.attributes[''Is Charging'']
    == false }}"'
  - '-          sequence:'
  - '-            - service: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.macbook_connected_to_charger_cable'
  - '-            - service: notify.mobile_app_ephone_uk'
  - '-              data:'
  - '-                title: MacBook Power Status'
  - '-                message: MacBook disconnected from power.'
  - '-'
  - '-- id: monitor_disconnect_powerdown'
  - "-  alias: \"Monitor Disconnect \u2013 Power Down Display + Backlight\""
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') != "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.enable_daily_clean'
  - '+  - platform: state'
  - '+    entity_id: script.valetudo_short_clean'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: switch.hp27i_monitor'
  - '-      state: "on"'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: switch.turn_off'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-    - service: light.turn_off'
  - '-      target:'
  - '-        entity_id: light.monitor_led_backlight'
  - '-'
  - '-- id: monitor_reconnect_wakeup'
  - "-  alias: \"Monitor Reconnect \u2013 Wake Monitor + Conditional Light\""
  - '-  mode: restart'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ states(''sensor.macbook_primary_display_id'') == "37D8832A-2D66-02CA-B9F7-8F30A301B230"
    }}'
  - '-  action:'
  - '-    - service: switch.turn_on'
  - '-      target:'
  - '-        entity_id: switch.hp27i_monitor'
  - '-'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv1'
  - '-                  state: "on"'
  - '-                - condition: state'
  - '-                  entity_id: switch.illuminance_lv2'
  - '-                  state: "on"'
  - '-          sequence:'
  - '-            - service: light.turn_on'
  - '-              target:'
  - '-                entity_id: light.monitor_led_backlight'
  - '-              data:'
  - '-                brightness: 150'
  - '-                effect: "Candlelight"  # gentle ambient startup effect'
  - '-'
- logic_id: hestia_system_startup_sequence
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/hestia_system_startup_sequence.yaml
  - '@@ -1,264 +1,11 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '+- id: hestia_system_startup_sequence'
  - '+  alias: HESTIA System Startup Sequence'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '-  condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
  - '-        name: "System Health Monitor"'
- logic_id: notify_fallback_integrity_issues
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/notify_fallback_integrity_issues.yaml
  - '@@ -1,264 +1,13 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+- id: notify_fallback_integrity_issues'
  - '+  alias: Notify Fallback Integrity Issues'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '+  - platform: state'
  - '+    entity_id: sensor.sensor_fallback_integrity'
  - '   condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
- logic_id: notify_system_health_issues
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/notify_system_health_issues.yaml
  - '@@ -1,264 +1,11 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+- id: notify_system_health_issues'
  - '+  alias: Notify on System Health Issues'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '-  condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
- logic_id: hestia_log_error_tracker
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/hestia_log_error_tracker.yaml
  - '@@ -1,264 +1,11 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '+- id: hestia_log_error_tracker'
  - '+  alias: HESTIA - Log Error Tracker'
  - '   mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '+  trigger: []'
  - '   condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
- logic_id: hestia_periodic_system_health_check_automation_temp
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/hestia_periodic_system_health_check_automation_temp.yaml
  - '@@ -1,264 +1,15 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+- id: hestia_periodic_system_health_check_automation_temp'
  - '+  alias: HESTIA Periodic System Health Check'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '-  condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
- logic_id: entity_health_degradation_alert
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/entity_health_degradation_alert.yaml
  - '@@ -1,264 +1,11 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '+- id: entity_health_degradation_alert'
  - '+  alias: Entity Health Degradation Alert'
  - '   mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '-  condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
  - '-        name: "System Health Monitor"'
- logic_id: hestia_dependency_integrity_check_validator
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/automations_system_health.yaml'
  - +++ /mnt/data/output/rewritten_automations/hestia_dependency_integrity_check_validator.yaml
  - '@@ -1,264 +1,9 @@'
  - '-# File: /config/hestia/automations/diagnostics/automations_system_health.yaml'
  - '-'
  - '-- alias: "HESTIA System Startup Sequence"'
  - '-  id: "hestia_system_startup_sequence"'
  - '-  description: "Executes system initialization at Home Assistant startup"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        message: "HESTIA system is starting up..."'
  - '-        level: info'
  - '-'
  - '-    - delay: "00:00:05"'
  - '-'
  - '-    - service: input_select.select_option'
  - '-      target:'
  - '-        entity_id: input_select.system_mode'
  - '-      data:'
  - '-        option: "{{ states(''sensor.recommended_system_mode_beta'') | default(''default'')
    }}"'
  - '-'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_room_registry_json_mqtt'
  - '-          - sensor.template_monitor_status_mu'
  - '-          - sensor.hermes_config_mu'
  - '-          - sensor.alpha_sensor_registry_json_mqtt'
  - '-          - sensor.hestia_system_beta'
  - '-'
  - '-    - service: script.perform_system_health_check'
  - '-'
  - '-    - service: persistent_notification.create'
  - '-      data:'
  - '-        title: "HESTIA System Active"'
  - '-        message: >'
  - '-          HESTIA is now active.'
  - '-          Mode'
  - '-'
  - '-- alias: "Notify Fallback Integrity Issues"'
  - '-  id: "notify_fallback_integrity_issues"'
  - '-  description: "Warns if fallback abstractions are unresolved"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.sensor_fallback_integrity'
  - '-  condition:'
  - '-    - condition: template'
  - '-      value_template: "{{ states(''sensor.sensor_fallback_integrity'') | int
    > 0 }}"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Sensor Abstraction Integrity Issue\""
  - '-        message: >'
  - '-          Unresolved fallback abstractions:'
  - '-          {{ state_attr(''sensor.sensor_fallback_integrity'', ''unresolved_abstractions'')
    | default(''unknown'') }}'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: warning'
  - '-        message: >'
  - '-          Fallback abstraction issue detected: {{ states(''sensor.sensor_fallback_integrity'')
    }} unresolved abstractions.'
  - '-'
  - '-- alias: "Notify on System Health Issues"'
  - '-  id: "notify_system_health_issues"'
  - '-  description: "Alerts when system health status reports issues"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.system_health_status'
  - '-      to: "issues"'
  - '-  action:'
  - '-    - action: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\U0001F6A8 HESTIA System Health Alert\""
  - '-        message: >'
  - '-          System issues detected:'
  - '-          - Fallbacks unresolved: {{ state_attr(''sensor.system_health_status'',
    ''fallbacks_unresolved'') | default(''n/a'') }}'
  - '-          - Unavailable entities: {{ state_attr(''sensor.system_health_status'',
    ''unavailable_entities'') | default(''n/a'') }}'
  - '-        notification_id: "hestia_system_health_issues"'
  - '-    - action: logbook.log'
  - '-      data:'
  - '-        name: "System Health Monitor"'
  - '-        message: "System health transitioned to ''issues''. Fallbacks or entities
    may be missing."'
  - '-        domain: system'
  - '-'
  - '-- alias: "HESTIA - Log Error Tracker"'
- logic_id: update_ha_repo_mirror
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/update_ha_repo_mirror.yaml
  - '@@ -1,103 +1,9 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: update_ha_repo_mirror'
  - '+  alias: update_ha_repo_mirror'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
  - '-          - sensor.alpha_light_registry_raw'
  - '-'
- logic_id: hestia_daily_registry_reconciliation_alpha_to_omega_sync
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/hestia_daily_registry_reconciliation_alpha_to_omega_sync.yaml
  - '@@ -1,103 +1,9 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: hestia_daily_registry_reconciliation_alpha_to_omega_sync'
  - '+  alias: HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
  - '-          - sensor.alpha_light_registry_raw'
  - '-'
- logic_id: run_light_template_generator_on_startup
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/run_light_template_generator_on_startup.yaml
  - '@@ -1,103 +1,9 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: run_light_template_generator_on_startup'
  - '+  alias: Run Light Template Generator on Startup'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
  - '-          - sensor.alpha_light_registry_raw'
  - '-'
- logic_id: run_hestia_snapshot_on_ha_start
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/run_hestia_snapshot_on_ha_start.yaml
  - '@@ -1,103 +1,9 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: run_hestia_snapshot_on_ha_start'
  - '+  alias: Run HESTIA Snapshot on HA Startup'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
  - '-          - sensor.alpha_light_registry_raw'
  - '-'
- logic_id: refresh_file_sensors
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/refresh_file_sensors.yaml
  - '@@ -1,103 +1,9 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: refresh_file_sensors'
  - '+  alias: Refresh File Sensors Every 5 Minutes'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
  - '-          - sensor.alpha_light_registry_raw'
  - '-'
- logic_id: republish_all_registry_json_mqtt_automation
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/diagnostics/system_maintenance_routines.yaml'
  - +++ /mnt/data/output/rewritten_automations/republish_all_registry_json_mqtt_automation.yaml
  - '@@ -1,103 +1,11 @@'
  - "-# \U0001F4C1 /config/hestia/automations/diagnostics/system_maintenance_routines.yaml"
  - '-'
  - '-- alias: "mnemo_init_post_boot"'
  - '-  id: "mnemo_init_post_boot"'
  - '-  description: "Idempotent package install. The script just runs apk add coreutils
    jq"'
  - '+- id: republish_all_registry_json_mqtt_automation'
  - '+  alias: Republish Registry JSONs to MQTT'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: homeassistant'
  - '-      event: start'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - alias: "Run shell command to fix mnemo"'
  - '-      service: shell_command.mnemo_fix'
  - '-    - alias: "Log that mnemo init was run"'
  - '-      service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran mnemo init post-boot"'
  - '-'
  - '-- alias: "update_ha_repo_mirror"'
  - '-  id: "update_ha_repo_mirror"'
  - '-  description: Updates the home assistant repository mirror on ''/share/GIT/'''
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:30:00"'
  - '-  action:'
  - '-    - service: shell_command.mnemo_mirror'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Ran update-repo.sh to sync Home Assistant mirror at 03:30."'
  - '-'
  - '-- alias: "HESTIA Daily Registry Reconciliation (Alpha to Omega Sync)"'
  - '-  id: "hestia_daily_registry_reconciliation_alpha_to_omega_sync"'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: time'
  - '-    at: "03:00:00"'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - service: shell_command.sync_alpha_to_omega'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Alpha to Omega registry sync triggered at 03:00"'
  - '-'
  - '-- alias: "Run Light Template Generator on Startup"'
  - '-  id: "run_light_template_generator_on_startup"'
  - '-  description: Automation to run the light template generator on startup'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: homeassistant_started'
  - '-  action:'
  - '-    - delay: "00:00:05"'
  - '-    - service: shell_command.generate_light_entities'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "Light entities generated on startup"'
  - '-'
  - '-- alias: "Run HESTIA Snapshot on HA Startup"'
  - '-  id: "run_hestia_snapshot_on_ha_start"'
  - '-  description: Automatically run a system snapshot when HA restarts'
  - '-  mode: single'
  - '-  trigger:'
  - '-    platform: homeassistant'
  - '-    event: start'
  - '-  action:'
  - '-    - delay: "00:00:30"'
  - '-    - service: shell_command.mnemo_snapshot'
  - '-    - service: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: "HESTIA snapshot executed on startup"'
  - '-'
  - '-- alias: "Refresh File Sensors Every 5 Minutes"'
  - '-  id: refresh_file_sensors'
  - '-  description: Refreshes the omega and alpha level registries every five minutes.
    Raw sensors sourced from GUI.'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: time_pattern'
  - '-      minutes: "/5"'
  - '-  action:'
  - '-    - service: homeassistant.update_entity'
  - '-      target:'
  - '-        entity_id:'
  - '-          - sensor.omega_device_registry_raw'
  - '-          - sensor.omega_room_registry_raw'
  - '-          - sensor.alpha_sensor_registry_raw'
- logic_id: aether_bedroom_dehumidifier_control
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_humidity_control_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_bedroom_dehumidifier_control.yaml
  - '@@ -1,74 +1,20 @@'
  - ' - id: aether_bedroom_dehumidifier_control'
  - '   alias: AETHER - Bedroom Dehumidifier Control'
  - '-  description: Manage bedroom dehumidifier based on humidity levels'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.dehumidifier_needed_bedroom'
  - '-    - platform: numeric_state'
  - '-      entity_id: sensor.merged_bedroom_humidity_eta'
  - '-      above: 65'
  - '-    - platform: numeric_state'
  - '-      entity_id: sensor.merged_bedroom_humidity_eta'
  - '-      below: 55'
  - '-    - platform: state'
  - '-      entity_id: input_select.humidity_control_strategy'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.dehumidifier_needed_bedroom'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.humidity_control_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_select.humidity_control_strategy'
  - '+  - platform: state'
  - '+    entity_id: sensor.merged_bedroom_humidity_eta'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.humidity_control_enabled'
  - '-      state: "on"'
  - '-  action:'
  - '-    - variables:'
  - '-        humidity: "{{ states(''sensor.merged_bedroom_humidity_eta'') | float(0)
    }}"'
  - '-        strategy: "{{ states(''input_select.humidity_control_strategy'') | default(''Off'')
    }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: numeric_state'
  - '-              entity_id: sensor.merged_bedroom_humidity_eta'
  - '-              above: 65'
  - '-            - condition: template'
  - '-              value_template: "{{ strategy != ''Off'' }}"'
  - '-          sequence:'
  - '-            - service: switch.turn_on'
  - '-              target:'
  - '-                entity_id: switch.probreeze_dehumidifier'
  - '-            - service: fan.turn_on'
  - '-              target:'
  - '-                entity_id:'
  - '-                  - fan.levoit_air_purifier'
  - '-                  - fan.bedroom_fan'
  - '-            - service: system_log.write'
  - '-              data:'
  - '-                message: >'
  - "-                  Activated bedroom dehumidifier (strategy: {{ strategy }})\
    \ \u2013 humidity: {{ humidity }}%"
  - '-                level: info'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: numeric_state'
  - '-                  entity_id: sensor.merged_bedroom_humidity_eta'
  - '-                  below: 55'
  - '-                - condition: state'
  - '-                  entity_id: input_select.humidity_control_strategy'
  - '-                  state: "Off"'
  - '-          sequence:'
  - '-            - service: switch.turn_off'
  - '-              target:'
  - '-                entity_id: switch.probreeze_dehumidifier'
  - '-            - service: fan.turn_off'
  - '-              target:'
  - '-                entity_id:'
  - '-                  - fan.levoit_air_purifier'
  - '-                  - fan.bedroom_fan'
  - '-            - service: system_log.write'
  - '-              data:'
  - '-                message: >'
  - "-                  Deactivated bedroom dehumidifier (strategy: {{ strategy }})\
    \ \u2013 humidity: {{ humidity }}%"
  - '-                level: info'
  - '-      default:'
  - '-        - service: system_log.write'
  - '-          data:'
  - '-            message: >'
  - "-              Humidity control evaluated but no action taken \u2013 humidity:\
    \ {{ humidity }}%, strategy: {{ strategy }}"
  - '-            level: debug'
  - '-'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.humidity_control_enabled'
  - '+    state: ''on'''
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_ensuite_shower_detection
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_shower_humidity_control.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_ensuite_shower_detection.yaml
  - '@@ -1,74 +1,13 @@'
  - ' - id: aether_ensuite_shower_detection'
  - '   alias: AETHER - Ensuite Shower Detection & Ventilation'
  - '-  description: Detect shower usage and manage ventilation'
  - '   mode: restart'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.shower_active'
  - '-    - platform: numeric_state'
  - '-      entity_id: sensor.ensuite_humidity_beta'
  - '-      above: 75'
  - '-  action:'
  - '-    - variables:'
  - '-        shower_state: "{{ states(''binary_sensor.shower_active'') }}"'
  - '-        humidity: "{{ states(''sensor.ensuite_humidity_beta'') | float(0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: state'
  - '-                  entity_id: binary_sensor.shower_active'
  - '-                  state: "on"'
  - '-                - condition: and'
  - '-                  conditions:'
  - '-                    - condition: numeric_state'
  - '-                      entity_id: sensor.ensuite_humidity_beta'
  - '-                      above: 75'
  - '-                    - condition: template'
  - '-                      value_template: "{{ shower_state in [''off'', ''unavailable'',
    ''unknown''] }}"'
  - '-          sequence:'
  - '-            - action: fan.turn_on'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-            - action: input_boolean.turn_on'
  - '-              target:'
  - '-                entity_id: input_boolean.climate_override_active'
  - '-            - action: system_log.write'
  - '-              data:'
  - '-                level: info'
  - '-                message: >'
  - '-                  Ensuite ventilation triggered: {% if shower_state == ''on''
    %}'
  - '-                  Shower sensor ON {% else %} Humidity fallback ({{ humidity
    }}%) {% endif %}.'
  - '-                  Fan on, climate override activated.'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.shower_active'
  - '-              state: "off"'
  - '-          sequence:'
  - '-            - action: system_log.write'
  - '-              data:'
  - '-                level: info'
  - '-                message: >'
  - "-                  Ensuite shower ended \u2013 continuing ventilation for 15\
    \ minutes"
  - '-            - delay:'
  - '-                minutes: 15'
  - '-            - action: fan.turn_off'
  - '-              target:'
  - '-                entity_id: fan.ensuite'
  - '-            - action: input_boolean.turn_off'
  - '-              target:'
  - '-                entity_id: input_boolean.climate_override_active'
  - '-            - action: script.turn_on'
  - '-              target:'
  - '-                entity_id: script.climate_update_all_thermostats'
  - '-            - action: system_log.write'
  - '-              data:'
  - '-                level: info'
  - '-                message: >'
  - "-                  Ventilation complete \u2013 fan turned off, climate override\
    \ cleared, thermostats updated"
  - '-      default:'
  - '-        - action: system_log.write'
  - '-          data:'
  - '-            level: debug'
  - '-            message: >'
  - '-              Ensuite shower automation triggered, but no valid state or humidity
    match detected (shower: {{ shower_state }}, humidity: {{ humidity }}%)'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.shower_active'
  - '+  - platform: state'
  - '+    entity_id: sensor.ensuite_humidity_beta'
  - '+  condition: []'
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_climate_mode_control
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_mode_management_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_climate_mode_control.yaml
  - '@@ -1,76 +1,18 @@'
  - ' - id: aether_climate_mode_control'
  - '   alias: AETHER - Climate Mode Selector'
  - '-  description: Set climate mode based on home presence and time'
  - '+  mode: null'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: input_select.home_mode'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.is_night_time'
  - '-    - platform: event'
  - '-      event_type: homeassistant_start'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.is_night_time'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_select.home_mode'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: ''on'''
  - '-  action:'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: input_select.home_mode'
  - '-              state: Away'
  - '-          sequence:'
  - '-            - action: input_select.select_option'
  - '-              target:'
  - '-                entity_id: input_select.climate_mode'
  - '-              data:'
  - '-                option: away'
  - '-'
  - '-        - conditions:'
  - '-            - condition: or'
  - '-              conditions:'
  - '-                - condition: and'
  - '-                  conditions:'
  - '-                    - condition: state'
  - '-                      entity_id: binary_sensor.is_night_time'
  - '-                      state: ''on'''
  - '-                    - condition: state'
  - '-                      entity_id: input_select.home_mode'
  - '-                      state: Sleep'
  - '-                - condition: state'
  - '-                  entity_id: input_select.home_mode'
  - '-                  state: Sleep'
  - '-          sequence:'
  - '-            - action: input_select.select_option'
  - '-              target:'
  - '-                entity_id: input_select.climate_mode'
  - '-              data:'
  - '-                option: sleep'
  - '-'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: input_boolean.eco_mode_enabled'
  - '-              state: ''on'''
  - '-          sequence:'
  - '-            - action: input_select.select_option'
  - '-              target:'
  - '-                entity_id: input_select.climate_mode'
  - '-              data:'
  - '-                option: eco'
  - '-'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: input_select.home_mode'
  - '-              state: Home'
  - '-          sequence:'
  - '-            - action: input_select.select_option'
  - '-              target:'
  - '-                entity_id: input_select.climate_mode'
  - '-              data:'
  - '-                option: auto'
  - '-'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        level: info'
  - '-        message: >'
  - '-          Climate mode set to {{ states(''input_select.climate_mode'') }} based
    on home mode'
  - '-          {{ states(''input_select.home_mode'') }} and time of day'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+    state: ''on'''
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_window_closed_resumption
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_window_detection_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_window_closed_resumption.yaml
  - '@@ -1,58 +1,23 @@'
  - ' - id: aether_window_closed_resumption'
  - '   alias: AETHER - Resume After Window Closed'
  - '-  description: Resume heating after window has been closed'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.window_open_detected'
  - '-      from: ''on'''
  - '-      to: ''off'''
  - '-      for: "00:05:00"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.window_open_detected'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_override_active'
  - '+  - platform: state'
  - '+    entity_id: script.turn_on'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: ''on'''
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_override_active'
  - '-      state: ''on'''
  - '-  action:'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_resume_all_heating'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u2705 Climate Control Resumed\""
  - '-        message: "Window appears to be closed. Normal heating resumed."'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_CONTROL_RESUMED'
  - '-  mode: single'
  - '-'
  - '-- id: aether_window_open_detection'
  - '-  alias: AETHER - Window Open Detection'
  - '-  description: Detect open windows and pause heating'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.window_open_detected'
  - '-      to: ''on'''
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.window_open_detection'
  - '-      state: ''on'''
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: ''on'''
  - '-  action:'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_pause_all_heating'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Window Open Detected\""
  - '-        message: "Rapid temperature drop detected. Heating paused."'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_WINDOW_OPEN'
  - '-    - action: input_boolean.turn_on'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-  mode: single'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+    state: ''on'''
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_override_active'
  - '+    state: ''on'''
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_window_open_detection
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_window_detection_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_window_open_detection.yaml
  - '@@ -1,58 +1,25 @@'
  - '-- id: aether_window_closed_resumption'
  - '-  alias: AETHER - Resume After Window Closed'
  - '-  description: Resume heating after window has been closed'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.window_open_detected'
  - '-      from: ''on'''
  - '-      to: ''off'''
  - '-      for: "00:05:00"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: ''on'''
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_override_active'
  - '-      state: ''on'''
  - '-  action:'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_resume_all_heating'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u2705 Climate Control Resumed\""
  - '-        message: "Window appears to be closed. Normal heating resumed."'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_CONTROL_RESUMED'
  - '-  mode: single'
  - '-'
  - ' - id: aether_window_open_detection'
  - '   alias: AETHER - Window Open Detection'
  - '-  description: Detect open windows and pause heating'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.window_open_detected'
  - '-      to: ''on'''
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.window_open_detected'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.turn_on'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.window_open_detection'
  - '+  - platform: state'
  - '+    entity_id: script.turn_on'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.window_open_detection'
  - '-      state: ''on'''
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: ''on'''
  - '-  action:'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_pause_all_heating'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Window Open Detected\""
  - '-        message: "Rapid temperature drop detected. Heating paused."'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_WINDOW_OPEN'
  - '-    - action: input_boolean.turn_on'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-  mode: single'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.window_open_detection'
  - '+    state: ''on'''
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+    state: ''on'''
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_bedroom_climate_control
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_climate_control_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_bedroom_climate_control.yaml
  - '@@ -1,183 +1,24 @@'
  - '-- alias: AETHER - Bedroom Climate Control'
  - '-  id: aether_bedroom_climate_control'
  - '-  description: Regulate bedroom thermostat based on target temperature'
  - '+- id: aether_bedroom_climate_control'
  - '+  alias: AETHER - Bedroom Climate Control'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.bedroom_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_bedroom_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.bedroom_heating_needed'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: sensor.effective_bedroom_temperature_gamma'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.bedroom'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_bedroom_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.bedroom_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set temp = states(''sensor.merged_bedroom_temperature_eta'')
    | float(20) %}'
  - '-                {% set threshold = states(''sensor.effective_bedroom_temperature_gamma'')
    | float(20) +'
  - '-                                   states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ temp > threshold }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: "off"'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+    state: ''on'''
  - '+  - condition: template'
  - '+    value_template: ''{% set window_open = is_state(''''binary_sensor.window_open_detected'''','
  - +      ''on'') %} {% set window_detection = is_state(''input_boolean.window_open_detection'',
  - +      ''on'') %} {{ not (window_open and window_detection) }}
  - ' '
  - '-- alias: AETHER - Living Room Climate Control'
  - '-  id: aether_living_room_climate_control'
  - '-  description: Control living room thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_living_room_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.living_room'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_living_room_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
- logic_id: aether_living_room_climate_control
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_climate_control_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_living_room_climate_control.yaml
  - '@@ -1,183 +1,24 @@'
  - '-- alias: AETHER - Bedroom Climate Control'
  - '-  id: aether_bedroom_climate_control'
  - '-  description: Regulate bedroom thermostat based on target temperature'
  - '+- id: aether_living_room_climate_control'
  - '+  alias: AETHER - Living Room Climate Control'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.bedroom_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_bedroom_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '+  - platform: state'
  - '+    entity_id: binary_sensor.living_room_heating_needed'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: sensor.effective_living_room_temperature_gamma'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.bedroom'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_bedroom_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.bedroom_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set temp = states(''sensor.merged_bedroom_temperature_eta'')
    | float(20) %}'
  - '-                {% set threshold = states(''sensor.effective_bedroom_temperature_gamma'')
    | float(20) +'
  - '-                                   states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ temp > threshold }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: "off"'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+    state: ''on'''
  - '+  - condition: template'
  - '+    value_template: ''{% set window_open = is_state(''''binary_sensor.window_open_detected'''','
  - +      ''on'') %} {% set window_detection = is_state(''input_boolean.window_open_detection'',
  - +      ''on'') %} {{ not (window_open and window_detection) }}
  - ' '
  - '-- alias: AETHER - Living Room Climate Control'
  - '-  id: aether_living_room_climate_control'
  - '-  description: Control living room thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_living_room_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.living_room'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_living_room_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
- logic_id: aether_kitchen_climate_control
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_climate_control_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_kitchen_climate_control.yaml
  - '@@ -1,183 +1,24 @@'
  - '-- alias: AETHER - Bedroom Climate Control'
  - '-  id: aether_bedroom_climate_control'
  - '-  description: Regulate bedroom thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.bedroom_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_bedroom_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.bedroom'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_bedroom_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.bedroom_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set temp = states(''sensor.merged_bedroom_temperature_eta'')
    | float(20) %}'
  - '-                {% set threshold = states(''sensor.effective_bedroom_temperature_gamma'')
    | float(20) +'
  - '-                                   states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ temp > threshold }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: "off"'
  - '-'
  - '-- alias: AETHER - Living Room Climate Control'
  - '-  id: aether_living_room_climate_control'
  - '-  description: Control living room thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_living_room_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.living_room'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_living_room_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.living_room_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.living_room'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set current_temp = states(''sensor.merged_living_room_temperature_eta'')
    | float(20) %}'
  - '-                {% set target_temp = states(''sensor.effective_living_room_temperature_gamma'')
    | float(20) %}'
  - '-                {% set tolerance = states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ current_temp > (target_temp + tolerance) }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
- logic_id: aether_night_time_temperature_setback
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_climate_control_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_night_time_temperature_setback.yaml
  - '@@ -1,183 +1,32 @@'
  - '-- alias: AETHER - Bedroom Climate Control'
  - '-  id: aether_bedroom_climate_control'
  - '-  description: Regulate bedroom thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.bedroom_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_bedroom_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.bedroom'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_bedroom_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.bedroom_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set temp = states(''sensor.merged_bedroom_temperature_eta'')
    | float(20) %}'
  - '-                {% set threshold = states(''sensor.effective_bedroom_temperature_gamma'')
    | float(20) +'
  - '-                                   states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ temp > threshold }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.bedroom'
  - '-              data:'
  - '-                hvac_mode: "off"'
  - '-'
  - '-- alias: AETHER - Living Room Climate Control'
  - '-  id: aether_living_room_climate_control'
  - '-  description: Control living room thermostat based on target temperature'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: binary_sensor.living_room_heating_needed'
  - '-    - platform: state'
  - '-      entity_id: sensor.effective_living_room_temperature_gamma'
  - '-    - platform: time_pattern'
  - '-      minutes: "/15"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: >'
  - '-        {% set window_open = is_state(''binary_sensor.window_open_detected'',
    ''on'') %}'
  - '-        {% set window_detection = is_state(''input_boolean.window_open_detection'',
    ''on'') %}'
  - '-        {{ not (window_open and window_detection) }}'
  - '-  action:'
  - '-    - action: climate.set_temperature'
  - '-      target:'
  - '-        entity_id: climate.living_room'
  - '-      data:'
  - '-        temperature: "{{ states(''sensor.effective_living_room_temperature_gamma'')
    | float(21.0) }}"'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: state'
  - '-              entity_id: binary_sensor.living_room_heating_needed'
  - '-              state: "on"'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
  - '-              target:'
  - '-                entity_id: climate.living_room'
  - '-              data:'
  - '-                hvac_mode: heat'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: >'
  - '-                {% set current_temp = states(''sensor.merged_living_room_temperature_eta'')
    | float(20) %}'
  - '-                {% set target_temp = states(''sensor.effective_living_room_temperature_gamma'')
    | float(20) %}'
  - '-                {% set tolerance = states(''input_number.temperature_tolerance'')
    | float(0.5) %}'
  - '-                {{ current_temp > (target_temp + tolerance) }}'
  - '-          sequence:'
  - '-            - action: climate.set_hvac_mode'
- logic_id: aether_daily_environment_report
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_environment_monitoring_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_daily_environment_report.yaml
  - '@@ -1,15 +1,11 @@'
  - '-- id: "aether_daily_environment_report"'
  - '-  alias: "AETHER - Daily Environment Report"'
  - '-  description: Generate daily environmental health report'
  - '+- id: aether_daily_environment_report'
  - '+  alias: AETHER - Daily Environment Report'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: time'
  - '-      at: "08:00:00"'
  - '-  action:'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.aether_diagnostic_report'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        message: "Daily environment report script triggered"'
  - '-        level: info'
  - '+  - platform: state'
  - '+    entity_id: script.turn_on'
  - '+  condition: []'
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: aether_low_temperature_alert
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_alerts_and_notifications_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_low_temperature_alert.yaml
  - '@@ -1,184 +1,31 @@'
  - ' - id: aether_low_temperature_alert'
  - '   alias: AETHER - Low Temperature Alert'
  - '-  description: Alert on unusually low temperatures in any room'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: numeric_state'
  - '-      entity_id:'
  - '-        - sensor.merged_bedroom_temperature_eta'
  - '-        - sensor.merged_living_room_temperature_eta'
  - '-        - sensor.merged_ensuite_temperature_eta'
  - '-        - sensor.merged_kitchen_temperature_eta'
  - '-      below: 16'
  - '-      for: "00:30:00"'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.climate_automation_enabled'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.turn_off'
  - '+  - platform: state'
  - '+    entity_id: input_select.home_mode'
  - '+  - platform: state'
  - '+    entity_id: script.turn_on'
  - '+  - platform: state'
  - '+    entity_id: sensor.merged_bedroom_temperature_eta'
  - '+  - platform: state'
  - '+    entity_id: sensor.merged_ensuite_temperature_eta'
  - '+  - platform: state'
  - '+    entity_id: sensor.merged_kitchen_temperature_eta'
  - '+  - platform: state'
  - '+    entity_id: sensor.merged_living_room_temperature_eta'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: state'
  - '-      entity_id: input_select.home_mode'
  - '-      state: Home'
  - '-  action:'
  - '-    - variables:'
  - '-        room_mapping:'
  - '-          sensor.merged_bedroom_temperature_eta: Bedroom'
  - '-          sensor.merged_living_room_temperature_eta: Living Room'
  - '-          sensor.merged_ensuite_temperature_eta: Ensuite'
  - '-          sensor.merged_kitchen_temperature_eta: Kitchen'
  - '-        trigger_temp: "{{ trigger.to_state.state | float(0) }}"'
  - '-        trigger_entity: "{{ trigger.entity_id }}"'
  - '-        room_name: "{{ room_mapping[trigger.entity_id] }}"'
  - '-    - action: notify.mobile_app_ephone_uk'
  - '-      data:'
  - "-        title: \"\u2744\uFE0F Low Temperature Alert\""
  - "-        message: \"{{ room_name }} temperature has dropped to {{ trigger_temp\
    \ }}\xB0C. Check heating.\""
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_ALERT'
  - '-          entity_id: "{{ trigger_entity }}"'
  - '-    - action: input_boolean.turn_off'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_update_all_thermostats'
  - '-'
  - '-- id: aether_mold_risk_alert'
  - '-  alias: AETHER - Mold Risk Alert'
  - '-  description: Alert when conditions favorable for mold growth are detected'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') or'
  - '-           is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') }}'
  - '-      for: "01:00:00"'
  - '-  action:'
  - '-    - variables:'
  - '-        mold_risk_rooms: >'
  - '-          {% set rooms = [] %}'
  - '-          {% if is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Bedroom''] %}'
  - '-          {% endif %}'
  - '-          {% if is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Living Room''] %}'
  - '-          {% endif %}'
  - '-          {{ rooms | join('', '') }}'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Mold Risk Alert\""
  - '-        message: >'
  - '-          Conditions favorable for mold detected in: {{ mold_risk_rooms }}.'
  - '-          Consider using a dehumidifier and increasing heat.'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_MOLD_RISK'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ ''Bedroom'' in mold_risk_rooms }}"'
- logic_id: aether_mold_risk_alert
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_alerts_and_notifications_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_mold_risk_alert.yaml
  - '@@ -1,184 +1,9 @@'
  - '-- id: aether_low_temperature_alert'
  - '-  alias: AETHER - Low Temperature Alert'
  - '-  description: Alert on unusually low temperatures in any room'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: numeric_state'
  - '-      entity_id:'
  - '-        - sensor.merged_bedroom_temperature_eta'
  - '-        - sensor.merged_living_room_temperature_eta'
  - '-        - sensor.merged_ensuite_temperature_eta'
  - '-        - sensor.merged_kitchen_temperature_eta'
  - '-      below: 16'
  - '-      for: "00:30:00"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: state'
  - '-      entity_id: input_select.home_mode'
  - '-      state: Home'
  - '-  action:'
  - '-    - variables:'
  - '-        room_mapping:'
  - '-          sensor.merged_bedroom_temperature_eta: Bedroom'
  - '-          sensor.merged_living_room_temperature_eta: Living Room'
  - '-          sensor.merged_ensuite_temperature_eta: Ensuite'
  - '-          sensor.merged_kitchen_temperature_eta: Kitchen'
  - '-        trigger_temp: "{{ trigger.to_state.state | float(0) }}"'
  - '-        trigger_entity: "{{ trigger.entity_id }}"'
  - '-        room_name: "{{ room_mapping[trigger.entity_id] }}"'
  - '-    - action: notify.mobile_app_ephone_uk'
  - '-      data:'
  - "-        title: \"\u2744\uFE0F Low Temperature Alert\""
  - "-        message: \"{{ room_name }} temperature has dropped to {{ trigger_temp\
    \ }}\xB0C. Check heating.\""
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_ALERT'
  - '-          entity_id: "{{ trigger_entity }}"'
  - '-    - action: input_boolean.turn_off'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_update_all_thermostats'
  - '-'
  - ' - id: aether_mold_risk_alert'
  - '   alias: AETHER - Mold Risk Alert'
  - '-  description: Alert when conditions favorable for mold growth are detected'
  - '   mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') or'
  - '-           is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') }}'
  - '-      for: "01:00:00"'
  - '-  action:'
  - '-    - variables:'
  - '-        mold_risk_rooms: >'
  - '-          {% set rooms = [] %}'
  - '-          {% if is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Bedroom''] %}'
  - '-          {% endif %}'
  - '-          {% if is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Living Room''] %}'
  - '-          {% endif %}'
  - '-          {{ rooms | join('', '') }}'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Mold Risk Alert\""
  - '-        message: >'
  - '-          Conditions favorable for mold detected in: {{ mold_risk_rooms }}.'
  - '-          Consider using a dehumidifier and increasing heat.'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_MOLD_RISK'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ ''Bedroom'' in mold_risk_rooms }}"'
  - '-          sequence:'
  - '-            - action: script.turn_on'
  - '-              target:'
  - '-                entity_id: script.climate_humidity_control'
  - '-              data:'
  - '-                room: bedroom'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        message: "Mold risk alert triggered for rooms: {{ mold_risk_rooms }}"'
  - '-        level: warning'
  - '-'
  - '-- id: aether_sensors_anomaly_detection'
  - '-  alias: AETHER - Sensor Anomaly Detection'
  - '-  description: Alert on suspicious sensor readings'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: numeric_state'
  - '-      entity_id:'
- logic_id: aether_sensors_anomaly_detection
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_alerts_and_notifications_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_sensors_anomaly_detection.yaml
  - '@@ -1,184 +1,25 @@'
  - '-- id: aether_low_temperature_alert'
  - '-  alias: AETHER - Low Temperature Alert'
  - '-  description: Alert on unusually low temperatures in any room'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: numeric_state'
  - '-      entity_id:'
  - '-        - sensor.merged_bedroom_temperature_eta'
  - '-        - sensor.merged_living_room_temperature_eta'
  - '-        - sensor.merged_ensuite_temperature_eta'
  - '-        - sensor.merged_kitchen_temperature_eta'
  - '-      below: 16'
  - '-      for: "00:30:00"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: state'
  - '-      entity_id: input_select.home_mode'
  - '-      state: Home'
  - '-  action:'
  - '-    - variables:'
  - '-        room_mapping:'
  - '-          sensor.merged_bedroom_temperature_eta: Bedroom'
  - '-          sensor.merged_living_room_temperature_eta: Living Room'
  - '-          sensor.merged_ensuite_temperature_eta: Ensuite'
  - '-          sensor.merged_kitchen_temperature_eta: Kitchen'
  - '-        trigger_temp: "{{ trigger.to_state.state | float(0) }}"'
  - '-        trigger_entity: "{{ trigger.entity_id }}"'
  - '-        room_name: "{{ room_mapping[trigger.entity_id] }}"'
  - '-    - action: notify.mobile_app_ephone_uk'
  - '-      data:'
  - "-        title: \"\u2744\uFE0F Low Temperature Alert\""
  - "-        message: \"{{ room_name }} temperature has dropped to {{ trigger_temp\
    \ }}\xB0C. Check heating.\""
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_ALERT'
  - '-          entity_id: "{{ trigger_entity }}"'
  - '-    - action: input_boolean.turn_off'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_update_all_thermostats'
  - '-'
  - '-- id: aether_mold_risk_alert'
  - '-  alias: AETHER - Mold Risk Alert'
  - '-  description: Alert when conditions favorable for mold growth are detected'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') or'
  - '-           is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') }}'
  - '-      for: "01:00:00"'
  - '-  action:'
  - '-    - variables:'
  - '-        mold_risk_rooms: >'
  - '-          {% set rooms = [] %}'
  - '-          {% if is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Bedroom''] %}'
  - '-          {% endif %}'
  - '-          {% if is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Living Room''] %}'
  - '-          {% endif %}'
  - '-          {{ rooms | join('', '') }}'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Mold Risk Alert\""
  - '-        message: >'
  - '-          Conditions favorable for mold detected in: {{ mold_risk_rooms }}.'
  - '-          Consider using a dehumidifier and increasing heat.'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_MOLD_RISK'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ ''Bedroom'' in mold_risk_rooms }}"'
  - '-          sequence:'
  - '-            - action: script.turn_on'
  - '-              target:'
  - '-                entity_id: script.climate_humidity_control'
  - '-              data:'
  - '-                room: bedroom'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        message: "Mold risk alert triggered for rooms: {{ mold_risk_rooms }}"'
  - '-        level: warning'
  - '-'
  - ' - id: aether_sensors_anomaly_detection'
  - '   alias: AETHER - Sensor Anomaly Detection'
  - '-  description: Alert on suspicious sensor readings'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
- logic_id: aether_system_health_check
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/climate/aether_alerts_and_notifications_rewrapped.yaml'
  - +++ /mnt/data/output/rewritten_automations/aether_system_health_check.yaml
  - '@@ -1,184 +1,11 @@'
  - '-- id: aether_low_temperature_alert'
  - '-  alias: AETHER - Low Temperature Alert'
  - '-  description: Alert on unusually low temperatures in any room'
  - '+- id: aether_system_health_check'
  - '+  alias: AETHER - System Health Check'
  - '   mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: numeric_state'
  - '-      entity_id:'
  - '-        - sensor.merged_bedroom_temperature_eta'
  - '-        - sensor.merged_living_room_temperature_eta'
  - '-        - sensor.merged_ensuite_temperature_eta'
  - '-        - sensor.merged_kitchen_temperature_eta'
  - '-      below: 16'
  - '-      for: "00:30:00"'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.climate_automation_enabled'
  - '-      state: "on"'
  - '-    - condition: state'
  - '-      entity_id: input_select.home_mode'
  - '-      state: Home'
  - '-  action:'
  - '-    - variables:'
  - '-        room_mapping:'
  - '-          sensor.merged_bedroom_temperature_eta: Bedroom'
  - '-          sensor.merged_living_room_temperature_eta: Living Room'
  - '-          sensor.merged_ensuite_temperature_eta: Ensuite'
  - '-          sensor.merged_kitchen_temperature_eta: Kitchen'
  - '-        trigger_temp: "{{ trigger.to_state.state | float(0) }}"'
  - '-        trigger_entity: "{{ trigger.entity_id }}"'
  - '-        room_name: "{{ room_mapping[trigger.entity_id] }}"'
  - '-    - action: notify.mobile_app_ephone_uk'
  - '-      data:'
  - "-        title: \"\u2744\uFE0F Low Temperature Alert\""
  - "-        message: \"{{ room_name }} temperature has dropped to {{ trigger_temp\
    \ }}\xB0C. Check heating.\""
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_ALERT'
  - '-          entity_id: "{{ trigger_entity }}"'
  - '-    - action: input_boolean.turn_off'
  - '-      target:'
  - '-        entity_id: input_boolean.climate_override_active'
  - '-    - action: script.turn_on'
  - '-      target:'
  - '-        entity_id: script.climate_update_all_thermostats'
  - '-'
  - '-- id: aether_mold_risk_alert'
  - '-  alias: AETHER - Mold Risk Alert'
  - '-  description: Alert when conditions favorable for mold growth are detected'
  - '-  mode: single'
  - '-  trigger:'
  - '-    - platform: template'
  - '-      value_template: >'
  - '-        {{ is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') or'
  - '-           is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') }}'
  - '-      for: "01:00:00"'
  - '-  action:'
  - '-    - variables:'
  - '-        mold_risk_rooms: >'
  - '-          {% set rooms = [] %}'
  - '-          {% if is_state_attr(''sensor.bedroom_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Bedroom''] %}'
  - '-          {% endif %}'
  - '-          {% if is_state_attr(''sensor.living_room_environment_index'', ''mold_risk'',
    ''true'') %}'
  - '-            {% set rooms = rooms + [''Living Room''] %}'
  - '-          {% endif %}'
  - '-          {{ rooms | join('', '') }}'
  - '-    - action: notify.mobile_app_all'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Mold Risk Alert\""
  - '-        message: >'
  - '-          Conditions favorable for mold detected in: {{ mold_risk_rooms }}.'
  - '-          Consider using a dehumidifier and increasing heat.'
  - '-        data:'
  - '-          push:'
  - '-            category: CLIMATE_MOLD_RISK'
  - '-    - choose:'
  - '-        - conditions:'
  - '-            - condition: template'
  - '-              value_template: "{{ ''Bedroom'' in mold_risk_rooms }}"'
  - '-          sequence:'
  - '-            - action: script.turn_on'
  - '-              target:'
  - '-                entity_id: script.climate_humidity_control'
  - '-              data:'
  - '-                room: bedroom'
  - '-    - action: system_log.write'
  - '-      data:'
  - '-        message: "Mold risk alert triggered for rooms: {{ mold_risk_rooms }}"'
  - '-        level: warning'
  - '-'
  - '-- id: aether_sensors_anomaly_detection'
  - '-  alias: AETHER - Sensor Anomaly Detection'
  - '-  description: Alert on suspicious sensor readings'
- logic_id: validator_log_tier_chain_integrity
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/validation/automations_validator_logging.yaml'
  - +++ /mnt/data/output/rewritten_automations/validator_log_tier_chain_integrity.yaml
  - '@@ -1,146 +1,18 @@'
  - '-# File: /config/hestia/automations/validation/automations_validator_logging.yaml'
  - ' - id: validator_log_tier_chain_integrity'
  - '-  alias: "Log Tier Chain Integrity to Validator Log"'
  - '-  description: "Logs tier chain integrity validation results to validator_log.json"'
  - '+  alias: Log Tier Chain Integrity to Validator Log'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_chain_integrity_status'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.chain_diagnostics_enabled'
  - '+  - platform: state'
  - '+    entity_id: script.log_to_validator'
  - '+  - platform: state'
  - '+    entity_id: sensor.tier_chain_integrity_status'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log validation result to script"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_chain_integrity_status"'
  - '-        status: "{{ states(''sensor.tier_chain_integrity_status'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-          {% if broken_links is string %}'
  - '-            {{ broken_links }}'
  - '-          {% else %}'
  - '-            {% set issues = [] %}'
  - '-            {% for link in broken_links | default([]) %}'
  - '-              {% if link is mapping and ''entity_id'' in link %}'
  - '-                {% set _ = issues.append(link.entity_id ~ " missing source_signal_id")
    %}'
  - '-              {% endif %}'
  - '-            {% endfor %}'
  - '-            {{ issues }}'
  - '-          {% endif %}'
  - '-        error_code: "E_MISSING_SOURCE"'
  - "-        tier: \"\u03B2\""
  - '-        subsystem: "hephaestus"'
  - '-        fix_suggestion: "Ensure alpha-tier source exists and is registered."'
  - '-'
  - '-    - alias: "Fire validation breach event"'
  - '-      service: event.fire'
  - '-      data:'
  - '-        event_type: hestia.validation_breach'
  - '-        event_data:'
  - '-          source: sensor.tier_chain_integrity_status'
  - '-          error_code: E_MISSING_SOURCE'
  - "-          tier: \"\u03B2\""
  - '-          timestamp: "{{ now().isoformat() }}"'
  - '-          entity: >'
  - '-            {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-            {% if broken_links and broken_links | count > 0 %}'
  - '-              {{ broken_links[0].entity_id if broken_links[0] is mapping else
    broken_links[0] }}'
  - '-            {% else %}'
  - '-              "unknown"'
  - '-            {% endif %}'
  - '-          context: "Chain Integrity Validation"'
  - '-'
  - '-- id: validator_log_tier_escalation_violations'
  - '-  alias: "Log Tier Escalation Violations to Validator Log"'
  - '-  description: "Logs tier escalation validation breaches with detailed tier
    hierarchy context"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_escalation_violations'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: "{{ ''Violations'' in states(''sensor.tier_escalation_violations'')
    }}"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log tier escalation violations"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_escalation_violations"'
  - '-        status: "{{ states(''sensor.tier_escalation_violations'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set issues = [] %}'
  - '-          {% for level, label in ['
  - "-              ('invalid_beta_links', '\u03B2->\u03B2'),"
  - "-              ('invalid_gamma_links', '\u03B3 not from \u03B2/\u03B7'),"
  - "-              ('invalid_delta_links', '\u03B4 not from \u03B3')"
- logic_id: validator_log_tier_escalation_violations
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/validation/automations_validator_logging.yaml'
  - +++ /mnt/data/output/rewritten_automations/validator_log_tier_escalation_violations.yaml
  - '@@ -1,146 +1,21 @@'
  - '-# File: /config/hestia/automations/validation/automations_validator_logging.yaml'
  - '-- id: validator_log_tier_chain_integrity'
  - '-  alias: "Log Tier Chain Integrity to Validator Log"'
  - '-  description: "Logs tier chain integrity validation results to validator_log.json"'
  - '+- id: validator_log_tier_escalation_violations'
  - '+  alias: Log Tier Escalation Violations to Validator Log'
  - '+  mode: queued'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_chain_integrity_status'
  - '+  - platform: state'
  - '+    entity_id: input_boolean.chain_diagnostics_enabled'
  - '+  - platform: state'
  - '+    entity_id: script.log_to_validator'
  - '+  - platform: state'
  - '+    entity_id: sensor.tier_escalation_violations'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log validation result to script"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_chain_integrity_status"'
  - '-        status: "{{ states(''sensor.tier_chain_integrity_status'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-          {% if broken_links is string %}'
  - '-            {{ broken_links }}'
  - '-          {% else %}'
  - '-            {% set issues = [] %}'
  - '-            {% for link in broken_links | default([]) %}'
  - '-              {% if link is mapping and ''entity_id'' in link %}'
  - '-                {% set _ = issues.append(link.entity_id ~ " missing source_signal_id")
    %}'
  - '-              {% endif %}'
  - '-            {% endfor %}'
  - '-            {{ issues }}'
  - '-          {% endif %}'
  - '-        error_code: "E_MISSING_SOURCE"'
  - "-        tier: \"\u03B2\""
  - '-        subsystem: "hephaestus"'
  - '-        fix_suggestion: "Ensure alpha-tier source exists and is registered."'
  - '-'
  - '-    - alias: "Fire validation breach event"'
  - '-      service: event.fire'
  - '-      data:'
  - '-        event_type: hestia.validation_breach'
  - '-        event_data:'
  - '-          source: sensor.tier_chain_integrity_status'
  - '-          error_code: E_MISSING_SOURCE'
  - "-          tier: \"\u03B2\""
  - '-          timestamp: "{{ now().isoformat() }}"'
  - '-          entity: >'
  - '-            {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-            {% if broken_links and broken_links | count > 0 %}'
  - '-              {{ broken_links[0].entity_id if broken_links[0] is mapping else
    broken_links[0] }}'
  - '-            {% else %}'
  - '-              "unknown"'
  - '-            {% endif %}'
  - '-          context: "Chain Integrity Validation"'
  - '-'
  - '-- id: validator_log_tier_escalation_violations'
  - '-  alias: "Log Tier Escalation Violations to Validator Log"'
  - '-  description: "Logs tier escalation validation breaches with detailed tier
    hierarchy context"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_escalation_violations'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: "{{ ''Violations'' in states(''sensor.tier_escalation_violations'')
    }}"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log tier escalation violations"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_escalation_violations"'
  - '-        status: "{{ states(''sensor.tier_escalation_violations'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set issues = [] %}'
  - '-          {% for level, label in ['
  - "-              ('invalid_beta_links', '\u03B2->\u03B2'),"
  - "-              ('invalid_gamma_links', '\u03B3 not from \u03B2/\u03B7'),"
- logic_id: update_validation_breach_log
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/validation/automations_validator_logging.yaml'
  - +++ /mnt/data/output/rewritten_automations/update_validation_breach_log.yaml
  - '@@ -1,146 +1,9 @@'
  - '-# File: /config/hestia/automations/validation/automations_validator_logging.yaml'
  - '-- id: validator_log_tier_chain_integrity'
  - '-  alias: "Log Tier Chain Integrity to Validator Log"'
  - '-  description: "Logs tier chain integrity validation results to validator_log.json"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_chain_integrity_status'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '+- id: update_validation_breach_log'
  - '+  alias: Update Validation Breach Log'
  - '   mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log validation result to script"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_chain_integrity_status"'
  - '-        status: "{{ states(''sensor.tier_chain_integrity_status'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-          {% if broken_links is string %}'
  - '-            {{ broken_links }}'
  - '-          {% else %}'
  - '-            {% set issues = [] %}'
  - '-            {% for link in broken_links | default([]) %}'
  - '-              {% if link is mapping and ''entity_id'' in link %}'
  - '-                {% set _ = issues.append(link.entity_id ~ " missing source_signal_id")
    %}'
  - '-              {% endif %}'
  - '-            {% endfor %}'
  - '-            {{ issues }}'
  - '-          {% endif %}'
  - '-        error_code: "E_MISSING_SOURCE"'
  - "-        tier: \"\u03B2\""
  - '-        subsystem: "hephaestus"'
  - '-        fix_suggestion: "Ensure alpha-tier source exists and is registered."'
  - '-'
  - '-    - alias: "Fire validation breach event"'
  - '-      service: event.fire'
  - '-      data:'
  - '-        event_type: hestia.validation_breach'
  - '-        event_data:'
  - '-          source: sensor.tier_chain_integrity_status'
  - '-          error_code: E_MISSING_SOURCE'
  - "-          tier: \"\u03B2\""
  - '-          timestamp: "{{ now().isoformat() }}"'
  - '-          entity: >'
  - '-            {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-            {% if broken_links and broken_links | count > 0 %}'
  - '-              {{ broken_links[0].entity_id if broken_links[0] is mapping else
    broken_links[0] }}'
  - '-            {% else %}'
  - '-              "unknown"'
  - '-            {% endif %}'
  - '-          context: "Chain Integrity Validation"'
  - '-'
  - '-- id: validator_log_tier_escalation_violations'
  - '-  alias: "Log Tier Escalation Violations to Validator Log"'
  - '-  description: "Logs tier escalation validation breaches with detailed tier
    hierarchy context"'
  - '-  trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_escalation_violations'
  - '-  condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-    - condition: template'
  - '-      value_template: "{{ ''Violations'' in states(''sensor.tier_escalation_violations'')
    }}"'
  - '-  mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 5'
  - '-  action:'
  - '-    - alias: "Log tier escalation violations"'
  - '-      service: script.log_to_validator'
  - '-      data:'
  - '-        sensor_id: "sensor.tier_escalation_violations"'
  - '-        status: "{{ states(''sensor.tier_escalation_violations'') }}"'
  - '-        validated_at: "{{ now().isoformat() }}"'
  - '-        issues: >'
  - '-          {% set issues = [] %}'
  - '-          {% for level, label in ['
  - "-              ('invalid_beta_links', '\u03B2->\u03B2'),"
  - "-              ('invalid_gamma_links', '\u03B3 not from \u03B2/\u03B7'),"
  - "-              ('invalid_delta_links', '\u03B4 not from \u03B3')"
  - '-            ] %}'
  - '-            {% for entity in state_attr(''sensor.tier_escalation_violations'',
    level) | default([]) %}'
  - '-              {% set _ = issues.append(entity ~ " has invalid tier escalation
    (" ~ label ~ ")") %}'
  - '-            {% endfor %}'
  - '-          {% endfor %}'
  - '-          {{ issues }}'
  - '-        error_code: "E_TIER_VIOLATION"'
  - '-        tier: "system"'
- logic_id: handle_validation_breach_notification
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/validation/automations_breach_handlers.yaml'
  - +++ /mnt/data/output/rewritten_automations/handle_validation_breach_notification.yaml
  - '@@ -1,35 +1,9 @@'
  - '-# File: /config/hestia/automations/validation/automations_breach_handlers.yaml'
  - ' - id: handle_validation_breach_notification'
  - '-  alias: "Handle Validation Breach - Notification"'
  - '-  description: "Notifies when a hestia.validation_breach event is fired"'
  - '-  trigger:'
  - '-    - platform: event'
  - '-      event_type: hestia.validation_breach'
  - '+  alias: Handle Validation Breach - Notification'
  - '   mode: queued'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 3'
  - '-  action:'
  - '-    - alias: "Send persistent notification"'
  - '-      service: persistent_notification.create'
  - '-      data:'
  - "-        title: \"\u26A0\uFE0F Validation Breach Detected\""
  - '-        message: >'
  - '-          {% set source = trigger.event.data.source %}'
  - '-          {% set entity = trigger.event.data.entity | default(''unknown'') %}'
  - '-          {% set error_code = trigger.event.data.error_code %}'
  - '-          {% set context = trigger.event.data.context | default(''none'') %}'
  - '-          {% set time = trigger.event.data.timestamp %}'
  - '-          {% set severity = trigger.event.data.severity | default(''error'')
    %}'
  - '-          '
  - '-          **Validation Breach**'
  - '-          '
  - '-          - **Source**: {{ source }}'
  - '-          - **Entity**: {{ entity }}'
  - '-          - **Error**: {{ error_code }}'
  - '-          - **Context**: {{ context }}'
  - '-          - **Time**: {{ time }}'
  - '-          - **Severity**: {{ severity }}'
  - '-          '
  - '-          Check the Athena dashboard for details.'
  - '-        notification_id: "validation_breach_{{ trigger.event.data.error_code
    }}"'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '+  trigger: []'
  - '+  condition: []'
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
- logic_id: emit_breach_tier_chain_integrity
  status: diff_generated
  diff:
  - '--- /mnt/data/extracted_full/automations/automations/validation/automations_tier_chain_validation.yaml'
  - +++ /mnt/data/output/rewritten_automations/emit_breach_tier_chain_integrity.yaml
  - '@@ -1,35 +1,16 @@'
  - '-# File: /config/hestia/automations/diagnostics/tier_chain_validation.yaml'
  - ' - id: emit_breach_tier_chain_integrity'
  - '-  alias: "Emit Validation Breach - Tier Chain Integrity"'
  - '-  description: "Fires hestia.validation_breach when broken tier links are detected"'
  - '+  alias: Emit Validation Breach - Tier Chain Integrity'
  - '+  mode: single'
  - '+  description: "Rewritten in emitter \u2192 fusion \u2192 action form (AUTOMATION_REWRITER\'
  - +    \ phase)"
  - '   trigger:'
  - '-    - platform: state'
  - '-      entity_id: sensor.tier_chain_integrity_status'
  - "-      to: \"\u274C Broken Links\"  # ensure this matches exactly as shown in\
    \ Developer Tools"
  - '+  - platform: state'
  - '+    entity_id: input_boolean.chain_diagnostics_enabled'
  - '+  - platform: state'
  - '+    entity_id: sensor.tier_chain_integrity_status'
  - '   condition:'
  - '-    - condition: state'
  - '-      entity_id: input_boolean.chain_diagnostics_enabled'
  - '-      state: "on"'
  - '-  mode: single'
  - '-  max_exceeded: silent'
  - '-  trace:'
  - '-    stored_traces: 3'
  - '-  action:'
  - '-    - alias: "Fire validation breach event"'
  - '-      service: event.fire'
  - '-      data:'
  - '-        event_type: hestia.validation_breach'
  - '-        event_data:'
  - '-          source: sensor.tier_chain_integrity_status'
  - '-          error_code: E_MISSING_SOURCE'
  - "-          tier: \"\u03B2\""
  - '-          timestamp: "{{ now().isoformat() }}"'
  - '-          entity: >'
  - '-            {% set broken_links = state_attr(''sensor.tier_chain_integrity_status'',
    ''broken_links'') %}'
  - '-            {% if broken_links | length > 0 %}'
  - '-              {{ broken_links[0].entity_id if broken_links[0] is mapping else
    broken_links[0] }}'
  - '-            {% else %}'
  - '-              "unknown"'
  - '-            {% endif %}'
  - '-          context: "Chain Integrity Validation"'
  - '-          severity: "error"'
  - '+  - condition: state'
  - '+    entity_id: input_boolean.chain_diagnostics_enabled'
  - '+    state: ''on'''
  - '+  action: []'
  - '+  session_reference: hestia_phase_scan_20250608_automation_rewriter'
