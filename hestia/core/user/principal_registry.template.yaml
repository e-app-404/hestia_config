meta:
  template_meta:
    urn: "URN format: urn:principal:{system}:{alias} â€” unique identifier"
    alias: "Human-friendly short id (no spaces)"
    role_type: "One of: Human operator, Privileged, Service principal, Orchestration agent, etc."
    system_scope: "Short description of the environment this principal operates in"
    auth_domain: "Authentication domain or mechanism (e.g. macOS local, InfluxDB, SMB)"
    credential_artifacts: "References (labels, locations) to artifacts; never store secrets in this field"
    permissions: "Short text describing permissions or roles"
    primary_resources: "List of mappings describing resources. Use keys such as path, org, bucket, repo, share, tool"
    acceptance_operational_requirements: "Checks or behaviors that prove the principal is functional/authorized"
    constraints: "Guardrails and 'do not' items"
    provenance: "Source, ticket or seed and date for auditability"
    notes: "Optional free-form notes"

principals:
  - template: true
    urn: "urn:principal:example:alice"
    alias: "alice"
    role_type: "Human operator"
    system_scope: "macOS workstation"
    auth_domain: "macOS local"
    credential_artifacts: "keychain label 'ha_nas_login' (do NOT include secrets)"
    permissions: "User-level + sudo"
    primary_resources:
      - path: "/private/var/ha_real"
      - tool: "Terminal"
      - tool: "VSCode"
      - path: "/Users/example/projects/sample_repo"
    credentials:
      passwords: []
      keys:
        - path: "~/.ssh/example_key"
      files:
        - path: "~/.gitconfig"
    acceptance_operational_requirements: "How to validate this principal (health checks, ability to run helper, write probes)"
    constraints: "Guardrails (e.g. do not echo secrets; no autofs modifications)"
    provenance: "source-or-ticket + YYYY-MM-DD"
    notes: "Freeform notes about this principal"

  # Example service principal with org/bucket style resources and secret token reference
  - template: true
    urn: "urn:principal:service:influx:example"
    alias: influx-example
    role_type: "Service principal"
    system_scope: "InfluxDB v2"
    auth_domain: "InfluxDB"
    credential_artifacts: "Token stored in secrets.yaml as influxdb_token"
    permissions: "RW on bucket"
    primary_resources:
      - org: "ExampleOrg"
      - bucket: "example_bucket"
    credentials:
      tokens:
        - name: "influxdb_token"
          secret: !secret influxdb_token
    acceptance_operational_requirements: "Integration must be configured with api_version:2 and token: !secret influxdb_token"
    constraints: "Never echo tokens"
    provenance: "template"
    notes: "Service principal template"

  # Example repo/principal template for GitHub-like resources
  - template: true
    urn: "urn:principal:github:example_owner"
    alias: github-example
    role_type: "Privileged (repo owner)"
    system_scope: "GitHub repository hosting"
    auth_domain: "GitHub"
    credential_artifacts: "GH tokens stored in secrets.yaml"
    permissions: "Repo admin/collaborator"
    primary_resources:
      - repo: "example_owner/example_repo"
      - path: ".github/workflows/"
    credentials:
      tokens:
        - name: "github_token"
          secret: !secret github_token
    acceptance_operational_requirements: "Can accept PRs and run Actions; gh CLI auth should succeed when token is provided via !secret"
    constraints: "Do not leak tokens into logs"
    provenance: "template"
    notes: "GitHub principal template"
