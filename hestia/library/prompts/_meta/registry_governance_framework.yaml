# HESTIA Prompt Registry Governance Framework
# Consolidated classification, quality standards, and operational guidelines

registry_governance:
  tier_classification_system:
    α_tier:
      definition: "Core system control, emergency protocols, foundational governance"
      characteristics:
        - Direct system behavioral modification
        - Emergency response and recovery protocols
        - Foundational governance and policy enforcement
        - Meta-system control and coordination
      domains: [governance, registry_governance, behavior_governance, architecture_alignment, retrieval_control, meta_analysis, knowledge_indexing, light_entity_pipeline_rescue]
      approval_requirements: [chief_ai_officer_review, architectural_alignment_check]
      confidence_threshold: 90

    β_tier:
      definition: "Integration, processing, operational workflows, and system services"
      characteristics:
        - Cross-system integration and data processing
        - Operational workflow orchestration
        - Service coordination and monitoring
        - Tool ecosystem management
      domains: [tooling_analysis, config_tooling, tools_audit, light_entity_generation, file_migration, diagnostic, knowledge_inventory, extraction, operational]
      approval_requirements: [technical_review, integration_testing]
      confidence_threshold: 80

    γ_tier:
      definition: "Instructions, templates, behavioral guidance, and documentation"
      characteristics:
        - User-facing instructions and templates
        - Behavioral guidance and constraints
        - Documentation and reference materials
        - Training and educational content
      domains: [instructional, debugging, doc_ingestion]
      approval_requirements: [content_review, usability_testing]
      confidence_threshold: 75

  domain_taxonomy:
    core_domains:
      governance:
        description: "System-level governance, policy enforcement, and regulatory compliance"
        subtypes: [registry_governance, behavior_governance, architecture_alignment, meta_governance]
        typical_artifacts: [policies, standards, compliance_frameworks]

      extraction:
        description: "Data extraction, parsing, knowledge mining, and content processing"
        subtypes: [knowledge_indexing, sensor_extraction, conversation_mining, semantic_processing]
        typical_artifacts: [parsers, extractors, mining_algorithms]

      operational:
        description: "Day-to-day operations, workflow management, and process automation"
        subtypes: [file_management, config_management, deployment, maintenance]
        typical_artifacts: [procedures, workflows, automation_scripts]

      validation:
        description: "Quality assurance, compliance checking, and verification processes"
        subtypes: [schema_validation, quality_assurance, compliance_check, integrity_verification]
        typical_artifacts: [validators, checkers, audit_tools]

      diagnostic:
        description: "System health monitoring, troubleshooting, and anomaly detection"
        subtypes: [health_monitoring, troubleshooting, anomaly_detection, performance_analysis]
        typical_artifacts: [monitors, diagnostics, analyzers]

  prompt_type_classification:
    behavioral:
      purpose: "Modify AI behavior, constraints, or operational patterns"
      characteristics: [role_definition, constraint_specification, behavior_modification]
      validation_criteria: [behavioral_consistency, constraint_enforceability]

    structured:
      purpose: "Process structured data with defined inputs/outputs"
      characteristics: [schema_compliance, input_validation, output_formatting]
      validation_criteria: [schema_adherence, data_integrity]

    extractor:
      purpose: "Extract and transform information from various sources"
      characteristics: [source_parsing, data_extraction, format_transformation]
      validation_criteria: [extraction_accuracy, completeness]

    operational:
      purpose: "Execute operational procedures and workflows"
      characteristics: [process_automation, workflow_orchestration, task_execution]
      validation_criteria: [process_reliability, error_handling]

    instructional:
      purpose: "Provide guidance, templates, and educational content"
      characteristics: [educational_content, template_provision, guidance_delivery]
      validation_criteria: [clarity, completeness, usability]

  quality_standards:
    mandatory_requirements:
      - unique_identifier: "All prompts must have globally unique IDs"
      - clear_purpose: "Title and description must clearly state prompt purpose"
      - proper_classification: "Tier and domain must align with content and purpose"
      - traceability: "Must specify derivation source and dependencies"
      - schema_compliance: "Must conform to registry schema structure"

    quality_indicators:
      excellent: [comprehensive_instruction, clear_examples, robust_validation, complete_metadata]
      good: [clear_instruction, basic_examples, standard_validation, adequate_metadata]
      acceptable: [basic_instruction, minimal_examples, simple_validation, required_metadata]
      poor: [unclear_instruction, no_examples, no_validation, incomplete_metadata]

  governance_workflows:
    prompt_lifecycle:
      creation:
        - extract_or_author_content
        - classify_tier_and_domain
        - assign_unique_identifier