{# SQL Room Database Architecture — Diagnostics (thin) #}
{# Usage: Developer Tools → Templates → paste this template to render a compact health report. #}

{%- set ml_raw = state_attr('sensor.room_configs_motion_lighting','payload') %}
{%- set vc_raw = state_attr('sensor.room_configs_vacuum_control','payload') %}
{%- set ml_ok = ml_raw is string and (ml_raw.startswith('{') or ml_raw.startswith('[')) %}
{%- set vc_ok = vc_raw is string and (vc_raw.startswith('{') or vc_raw.startswith('[')) %}
{%- set rn_state = states('sensor.rooms_needing_cleaning') %}
{%- set rn_ok = (rn_state | regex_match('^-?\d+$')) %}
{%- set topic = states('input_text.valetudo_base_topic') %}
{%- set topic_ok = (topic | length) > 0 and topic != 'unknown' and topic != 'unavailable' %}
{%- set auto_ok = states('automation.motion_lights_bedroom_sql_v15') not in ['unknown','unavailable'] %}

{%- set checks = {
  'sensor.room_configs_motion_lighting.payload_present': ml_ok,
  'sensor.room_configs_vacuum_control.payload_present': vc_ok,
  'sensor.rooms_needing_cleaning.state_is_count': rn_ok,
  'input_text.valetudo_base_topic.present': topic_ok,
  'automation.motion_lights_bedroom_sql_v15.present': auto_ok
} %}

{%- set failures = checks | dict2items | selectattr('value','equalto',False) | map(attribute='key') | list %}

{%- set report = {
  'status': 'ok' if failures | length == 0 else 'needs_attention',
  'failures': failures,
  'details': {
    'rooms_needing_cleaning_count': rn_state,
    'valetudo_base_topic': topic
  }
} %}

{{ report | tojson }}
